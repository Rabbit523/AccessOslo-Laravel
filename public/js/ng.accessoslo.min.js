(function () {
  'use strict';
  var application = angular.module('accessosloApp.application', []);
  var admin = angular.module('accessosloApp.admin', []);
  var member = angular.module('accessosloApp.member', []);
  var directiveModule = angular.module('accessosloApp.multiselect', []);
  var googleMapModule = angular.module('accessosloApp.googleMapModule', []);  
  var accessosloApp = angular.module('accessosloApp', ['accessosloApp.application', 'accessosloApp.admin', 'accessosloApp.member', 'accessosloApp.multiselect', 'accessosloApp.googleMapModule']);  
  
  application.factory('apiRequest', [function () {
    var instance = {};
    instance.ajax = function (type, endpoint, data, onSuccess, onError) {
      $.ajax({
        type: type,
        url: config.server + endpoint,
        data: data,
        beforeSend: function (request) {
          request.setRequestHeader("X-CSRF-TOKEN", config.token);
        },
        success: function (response) {
          if (response.success) {
            onSuccess(response.data);
          } else {
            onError(response.error);
          }
        },
        error: onError
      });
    };
    return instance;
  }]);
  application.factory("usersAPI", ['apiRequest', function (apiRequest) {
    var extended = {};
    var endpoint = "users";
    
    extended.login = function (user, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/login", user, onSuccess, onError);
    };

    extended.register = function (user, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/register", user, onSuccess, onError);
    };
  
    extended.saveProfile = function (user, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/save-profile", user, onSuccess, onError);
    };
  
    extended.changePassword = function (user, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/change-password", user, onSuccess, onError);
    };
  
    extended.getProfileImageUploadURL = function () {
      return config.server + endpoint + "/get-profile-image";
    };
    extended.getCustomer = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/get-customer", data, onSuccess, onError);
    };
  
    extended.getPassengers = function (user, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/get-passengers", user, onSuccess, onError);
    };
  
    extended.deletePassenger = function (passenger, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/delete-passenger", passenger, onSuccess, onError);
    };
  
    extended.add_profile = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/add-profile", data, onSuccess, onError);
    };
  
    extended.update_profile = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/update-profile", data, onSuccess, onError);
    };
  
    extended.add_passenger = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/add-passenger", data, onSuccess, onError);
    };
  
    return extended;
  }]);
  application.factory("servicesAPI", ['apiRequest', function (apiRequest) {
    var extended = {};
    var endpoint = "services";
  
    extended.getAllLimousine = function (onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-limousines", {}, onSuccess, onError);
    };
  
    extended.meet_booking = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/meet-booking", data, onSuccess, onError);
    };
  
    extended.limousine_booking = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/limousine-booking", data, onSuccess, onError);
    };
  
    extended.getAllMeets = function (onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-allMeets", {}, onSuccess, onError);
    };
  
    extended.booking_travels = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/booking-travels", data, onSuccess, onError);
    };
  
    extended.send_invoice_request = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/send-invoice-request", data, onSuccess, onError);
    };
  
    extended.paywithCredit = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/pay-with-credit", data, onSuccess, onError);
    };
  
    extended.getAllTravels = function (type, onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-allTravels/" + type, {}, onSuccess, onError);
    };
  
    extended.request = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/handling-request", data, onSuccess, onError);
    };
  
    extended.getAllRequests = function (onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-handling-request", {}, onSuccess, onError);
    };
  
    extended.getAllPassengers = function (onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-all-passengers", {}, onSuccess, onError);
    };
    return extended;
  }]);
  application.factory("chartersAPI", ['apiRequest', function (apiRequest) {
    var extended = {};
    var endpoint = "charters";
  
    extended.create = function (flight, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/create", flight, onSuccess, onError);
    };
  
    extended.getDashboard = function (onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-admindashboard", {}, onSuccess, onError);
    };
  
    extended.cargo_booking = function (flight, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/cargo-booking", flight, onSuccess, onError);
    };
  
    extended.searchDashboard = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/searchdashboard", data, onSuccess, onError);
    };
  
    extended.getMemberNotice = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/get-notice", data, onSuccess, onError);
    };
  
    extended.emptyleg_booking = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/emptyleg-booking", data, onSuccess, onError);
    };
    return extended;
  }]);
  application.factory("storesAPI", ['apiRequest', function (apiRequest) {
    var extended = {};
    var endpoint = "stores";
  
    extended.getBannerImageUploadURL = function () {
      return config.server + endpoint + "/get-banner-image";
    };
    extended.getPageImageUploadURL = function () {
      return config.server + endpoint + "/get-page-image";
    };
    extended.getPostImageUploadURL = function () {
      return config.server + endpoint + "/get-post-image";
    };
    extended.SavePosts = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/save-post", data, onSuccess, onError);
    };
    extended.UpdatePosts = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/update-post", data, onSuccess, onError);
    };
    extended.PublishPosts = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/publish-post", data, onSuccess, onError);
    };
    extended.CreatePage = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/create-page", data, onSuccess, onError);
    };
    extended.SavePage = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/save-page", data, onSuccess, onError);
    };
    extended.PublishPage = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/publish-page", data, onSuccess, onError);
    };
    extended.SlideImageUpload = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/slide-image-upload", data, onSuccess, onError);
    };
    extended.SlideImageGet = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/slide-image-get", data, onSuccess, onError);
    };
    extended.SlideImageDelete = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/slide-image-delete", data, onSuccess, onError);
    };
    extended.AddNewMember = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/add-new-member", data, onSuccess, onError);
    };
    extended.UpdateMember = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/update-member", data, onSuccess, onError);
    };
    extended.getMembers = function (onSuccess, onError) {
      apiRequest.ajax("GET", endpoint + "/get-member/", {}, onSuccess, onError);
    };
    extended.DeleteMember = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/delete-member", data, onSuccess, onError);
    };
    extended.RemoveAvatar = function (data, onSuccess, onError) {
      apiRequest.ajax("POST", endpoint + "/delete-avatar", data, onSuccess, onError);
    };
    return extended;
  }]);  
  application.factory('accessosloAPI', ['usersAPI', 'servicesAPI', 'chartersAPI', 'storesAPI', function (usersAPI, servicesAPI, chartersAPI, storesAPI, CSRF_TOKEN) {
    var instance = {};
    instance.users = usersAPI;
    instance.services = servicesAPI;
    instance.charters = chartersAPI;
    instance.stores = storesAPI;
    return instance;
  }]);

  directiveModule.directive('ngDropdownMultiselect', ['$filter', '$document', '$compile', '$parse', function ($filter, $document, $compile, $parse) {
    return {
      restrict: 'AE',
      scope: {
        selectedModel: '=',
        options: '=',
        extraSettings: '=',
        events: '=',
        searchFilter: '=?',
        translationTexts: '=',
        groupBy: '@'
      },
      template: function (element, attrs) {
        var checkboxes = attrs.checkboxes ? true : false;
        var groups = attrs.groupBy ? true : false;
  
        var template = '<div class="multiselect-parent btn-group dropdown-multiselect">';
        template += '<button type="button" class="dropdown-toggle" ng-class="settings.buttonClasses" ng-click="toggleDropdown()">{{getButtonText()}}&nbsp;<span class="caret"></span></button>';
        template += '<ul class="dropdown-menu dropdown-menu-form" ng-style="{display: open ? \'block\' : \'none\', height : settings.scrollable ? settings.scrollableHeight : \'auto\' }" style="overflow: hidden; width: 100%;" >';
        template += '<li ng-hide="!settings.showCheckAll || settings.selectionLimit > 0"><a data-ng-click="selectAll()"><span class="glyphicon glyphicon-ok"></span>  {{texts.checkAll}}</a>';
        template += '<li ng-show="settings.showUncheckAll"><a data-ng-click="deselectAll();"><span class="glyphicon glyphicon-remove"></span>   {{texts.uncheckAll}}</a></li>';
        template += '<li ng-hide="(!settings.showCheckAll || settings.selectionLimit > 0) && !settings.showUncheckAll" class="divider"></li>';
        template += '<li ng-show="settings.enableSearch"><div class="dropdown-header"><input type="text" class="form-control" style="width: 100%;" ng-model="searchFilter" placeholder="{{texts.searchPlaceholder}}" /></li>';
        template += '<li ng-show="settings.enableSearch" class="divider"></li>';
  
        if (groups) {
          template += '<li ng-repeat-start="option in orderedItems | filter: searchFilter" ng-show="getPropertyForObject(option, settings.groupBy) !== getPropertyForObject(orderedItems[$index - 1], settings.groupBy)" role="presentation" class="dropdown-header">{{ getGroupTitle(getPropertyForObject(option, settings.groupBy)) }}</li>';
          template += '<li ng-repeat-end role="presentation">';
        } else {
          template += '<li role="presentation" ng-repeat="option in options | filter: searchFilter">';
        }
  
        template += '<a role="menuitem" tabindex="-1" ng-click="setSelectedItem(getPropertyForObject(option,settings.idProp))">';
  
        if (checkboxes) {
          template += '<div class="checkbox"><label><input class="checkboxInput" type="checkbox" ng-click="checkboxClick($event, getPropertyForObject(option,settings.idProp))" ng-checked="isChecked(getPropertyForObject(option,settings.idProp))" /> {{getPropertyForObject(option, settings.displayProp)}}</label></div></a>';
        } else {
          template += '<span data-ng-class="{\'glyphicon glyphicon-ok\': isChecked(getPropertyForObject(option,settings.idProp))}"></span> {{getPropertyForObject(option, settings.displayProp)}}</a>';
        }
  
        template += '</li>';
  
        template += '<li class="divider" ng-show="settings.selectionLimit > 1"></li>';
        template += '<li role="presentation" ng-show="settings.selectionLimit > 1"><a role="menuitem">{{selectedModel.length}} {{texts.selectionOf}} {{settings.selectionLimit}} {{texts.selectionCount}}</a></li>';
  
        template += '</ul>';
        template += '</div>';
  
        element.html(template);
      },
      link: function ($scope, $element, $attrs) {
        var $dropdownTrigger = $element.children()[0];
  
        $scope.toggleDropdown = function () {
          $scope.open = !$scope.open;
        };
  
        $scope.checkboxClick = function ($event, id) {
          $scope.setSelectedItem(id);
          $event.stopImmediatePropagation();
        };
  
        $scope.externalEvents = {
          onItemSelect: angular.noop,
          onItemDeselect: angular.noop,
          onSelectAll: angular.noop,
          onDeselectAll: angular.noop,
          onInitDone: angular.noop,
          onMaxSelectionReached: angular.noop
        };
  
        $scope.settings = {
          dynamicTitle: true,
          scrollable: false,
          scrollableHeight: '300px',
          closeOnBlur: true,
          displayProp: 'label',
          idProp: 'id',
          externalIdProp: 'id',
          enableSearch: false,
          selectionLimit: 0,
          showCheckAll: true,
          showUncheckAll: true,
          closeOnSelect: false,
          buttonClasses: 'btn btn-default',
          closeOnDeselect: false,
          groupBy: $attrs.groupBy || undefined,
          groupByTextProvider: null,
          smartButtonMaxItems: 0,
          smartButtonTextConverter: angular.noop
        };
  
        $scope.texts = {
          checkAll: 'Check All',
          uncheckAll: 'Uncheck All',
          selectionCount: 'checked',
          selectionOf: '/',
          searchPlaceholder: 'Search...',
          buttonDefaultText: 'Select Passengers',
          dynamicButtonTextSuffix: 'checked'
        };
  
        $scope.searchFilter = $scope.searchFilter || '';
  
        if (angular.isDefined($scope.settings.groupBy)) {
          $scope.$watch('options', function (newValue) {
            if (angular.isDefined(newValue)) {
              $scope.orderedItems = $filter('orderBy')(newValue, $scope.settings.groupBy);
            }
          });
        }
  
        angular.extend($scope.settings, $scope.extraSettings || []);
        angular.extend($scope.externalEvents, $scope.events || []);
        angular.extend($scope.texts, $scope.translationTexts);
  
        $scope.singleSelection = $scope.settings.selectionLimit === 1;
  
        function getFindObj(id) {
          var findObj = {};
  
          if ($scope.settings.externalIdProp === '') {
            findObj[$scope.settings.idProp] = id;
          } else {
            findObj[$scope.settings.externalIdProp] = id;
          }
  
          return findObj;
        }
  
        function clearObject(object) {
          for (var prop in object) {
            delete object[prop];
          }
        }
  
        if ($scope.singleSelection) {
          if (angular.isArray($scope.selectedModel) && $scope.selectedModel.length === 0) {
            clearObject($scope.selectedModel);
          }
        }
  
        if ($scope.settings.closeOnBlur) {
          $document.on('click', function (e) {
            var target = e.target.parentElement;
            var parentFound = false;
  
            while (angular.isDefined(target) && target !== null && !parentFound) {
              if (_.contains(target.className.split(' '), 'multiselect-parent') && !parentFound) {
                if (target === $dropdownTrigger) {
                  parentFound = true;
                }
              }
              target = target.parentElement;
            }
  
            if (!parentFound) {
              $scope.$apply(function () {
                $scope.open = false;
              });
            }
          });
        }
  
        $scope.getGroupTitle = function (groupValue) {
          if ($scope.settings.groupByTextProvider !== null) {
            return $scope.settings.groupByTextProvider(groupValue);
          }
  
          return groupValue;
        };
  
        $scope.getButtonText = function () {
          if ($scope.settings.dynamicTitle && ($scope.selectedModel.length > 0 || (angular.isObject($scope.selectedModel) && _.keys($scope.selectedModel).length > 0))) {
            if ($scope.settings.smartButtonMaxItems > 0) {
              var itemsText = [];
  
              angular.forEach($scope.options, function (optionItem) {
                if ($scope.isChecked($scope.getPropertyForObject(optionItem, $scope.settings.idProp))) {
                  var displayText = $scope.getPropertyForObject(optionItem, $scope.settings.displayProp);
                  var converterResponse = $scope.settings.smartButtonTextConverter(displayText, optionItem);
  
                  itemsText.push(converterResponse ? converterResponse : displayText);
                }
              });
  
              if ($scope.selectedModel.length > $scope.settings.smartButtonMaxItems) {
                itemsText = itemsText.slice(0, $scope.settings.smartButtonMaxItems);
                itemsText.push('...');
              }
  
              return itemsText.join(', ');
            } else {
              var totalSelected;
  
              if ($scope.singleSelection) {
                totalSelected = ($scope.selectedModel !== null && angular.isDefined($scope.selectedModel[$scope.settings.idProp])) ? 1 : 0;
              } else {
                totalSelected = angular.isDefined($scope.selectedModel) ? $scope.selectedModel.length : 0;
              }
  
              if (totalSelected === 0) {
                return $scope.texts.buttonDefaultText;
              } else {
                return totalSelected + ' ' + $scope.texts.dynamicButtonTextSuffix;
              }
            }
          } else {
            return $scope.texts.buttonDefaultText;
          }
        };
  
        $scope.getPropertyForObject = function (object, property) {
          if (angular.isDefined(object) && object.hasOwnProperty(property)) {
            return object[property];
          }
  
          return '';
        };
  
        $scope.selectAll = function () {
          $scope.deselectAll(false);
          $scope.externalEvents.onSelectAll();
  
          angular.forEach($scope.options, function (value) {
            $scope.setSelectedItem(value[$scope.settings.idProp], true);
          });
        };
  
        $scope.deselectAll = function (sendEvent) {
          sendEvent = sendEvent || true;
  
          if (sendEvent) {
            $scope.externalEvents.onDeselectAll();
          }
  
          if ($scope.singleSelection) {
            clearObject($scope.selectedModel);
          } else {
            $scope.selectedModel.splice(0, $scope.selectedModel.length);
          }
        };
  
        $scope.setSelectedItem = function (id, dontRemove) {
          var findObj = getFindObj(id);
          var finalObj = null;
  
          if ($scope.settings.externalIdProp === '') {
            finalObj = _.find($scope.options, findObj);
          } else {
            finalObj = findObj;
          }
  
          if ($scope.singleSelection) {
            clearObject($scope.selectedModel);
            angular.extend($scope.selectedModel, finalObj);
            $scope.externalEvents.onItemSelect(finalObj);
            if ($scope.settings.closeOnSelect) $scope.open = false;
  
            return;
          }
  
          dontRemove = dontRemove || false;
  
          var exists = _.findIndex($scope.selectedModel, findObj) !== -1;
  
          if (!dontRemove && exists) {
            $scope.selectedModel.splice(_.findIndex($scope.selectedModel, findObj), 1);
            $scope.externalEvents.onItemDeselect(findObj);
          } else if (!exists && ($scope.settings.selectionLimit === 0 || $scope.selectedModel.length < $scope.settings.selectionLimit)) {
            $scope.selectedModel.push(finalObj);
            $scope.externalEvents.onItemSelect(finalObj);
          }
          if ($scope.settings.closeOnSelect) $scope.open = false;
        };
  
        $scope.isChecked = function (id) {
          if ($scope.singleSelection) {
            return $scope.selectedModel !== null && angular.isDefined($scope.selectedModel[$scope.settings.idProp]) && $scope.selectedModel[$scope.settings.idProp] === getFindObj(id)[$scope.settings.idProp];
          }
          return _.findIndex($scope.selectedModel, getFindObj(id)) !== -1;
        };
  
        $scope.externalEvents.onInitDone();
      }
    };
  }]);
  
  googleMapModule.directive('ngAutocomplete', ['$parse', function ($parse) {
    function convertPlaceToFriendlyObject(place) {
      var result = '';
      if (place) {
        result = {};
        for (var i = 0, l = place.address_components.length; i < l; i++) {
          if (i == 0) {
            result.searchedBy = place.address_components[i].types[0];
          }
          result[place.address_components[i].types[0]] = place.address_components[i].long_name;
        }
        result.formattedAddress = place.formatted_address;
        result.lat = place.geometry.location.lat();
        result.lng = place.geometry.location.lng();
      }
      return result;
    }
  
    return {
      restrict: 'A',
      require: 'ngModel',
      link: function ($scope, $element, $attrs, $ctrl) {
  
        if (!angular.isDefined($attrs.details)) {
          throw '<ng-autocomplete> must have attribute [details] assigned to store full address object';
        }
  
        var getDetails = $parse($attrs.details);
        var setDetails = getDetails.assign;
        var getOptions = $parse($attrs.options);
  
        //options for autocomplete
        var opts;
  
        //convert options provided to opts
        var initOpts = function () {
          opts = {};
          if (angular.isDefined($attrs.options)) {
            var options = getOptions($scope);
            if (options.types) {
              opts.types = [];
              opts.types.push(options.types);
            }
            if (options.bounds) {
              opts.bounds = options.bounds;
            }
            if (options.country) {
              opts.componentRestrictions = {
                country: options.country
              };
            }
          }
        };
  
        //create new autocomplete
        //reinitializes on every change of the options provided
        var newAutocomplete = function () {
          var gPlace = new google.maps.places.Autocomplete($element[0], opts);
          google.maps.event.addListener(gPlace, 'place_changed', function () {
            $scope.$apply(function () {
              var place = gPlace.getPlace();
              var details = convertPlaceToFriendlyObject(place);
              setDetails($scope, details);
              $ctrl.$setViewValue(details.formattedAddress);
              $ctrl.$validate();
            });
            if ($ctrl.$valid && angular.isDefined($attrs.validateFn)) {
              $scope.$apply(function () {
                $scope.$eval($attrs.validateFn);
              });
            }
          });
        };
        newAutocomplete();
  
        $ctrl.$validators.parse = function (value) {
          var details = getDetails($scope);
          var valid = ($attrs.required == true && details != undefined && details.lat != undefined) ||
            (!$attrs.required && (details == undefined || details.lat == undefined) && $element.val() != '');
          return valid;
        };
  
        $element.on('keypress', function (e) {
          // prevent form submission on pressing Enter as there could be more inputs to fill out
          if (e.which == 13) {
            e.preventDefault();
          }
        });
  
        //watch options provided to directive
        if (angular.isDefined($attrs.options)) {
          $scope.$watch($attrs.options, function () {
            initOpts();
            newAutocomplete();
          });
        }
  
        // user typed something in the input - means an intention to change address, which is why
        // we need to null out all fields for fresh validation
        $element.on('keyup', function (e) {
          //          chars 0-9, a-z                        numpad 0-9                   backspace         delete           space
          if ((e.which >= 48 && e.which <= 90) || (e.which >= 96 && e.which <= 105) || e.which == 8 || e.which == 46 || e.which == 32) {
            var details = getDetails($scope);
            if (details != undefined) {
              for (var property in details) {
                if (details.hasOwnProperty(property) && property != 'formattedAddress') {
                  delete details[property];
                }
              }
              setDetails($scope, details);
            }
            if ($ctrl.$valid) {
              $scope.$apply(function () {
                $ctrl.$setValidity('parse', false);
              });
            }
          }
        });
      }
    };
  }]);

  admin.directive('accessosloDashboard', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/admin/dashboard/view.html',
      scope: {},
      controller: function ($scope) {
        $scope.user = {};
        $scope.counts = {};
        $scope.data_change = false;
        $scope.executiveView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/executive-search-charter?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/executive-charter"; }, 100);
          }
        };
        $scope.groupView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/group-search-charter?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/group-charter"; }, 100);
          }
        };
        $scope.helicopterView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/helicopter-search-charter?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/helicopter-charter"; }, 100);
          }
        };
        $scope.cargoView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/cargo-search-charter?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/cargo-charter"; }, 100);
          }
        };
        $scope.meetView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/meet-search-charter?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/meet-greet"; }, 100);
          }
        };
        $scope.limousineView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/meet-search-charter?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/airport-limousine"; }, 100);
          }
        };
        $scope.handlingView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/handling-requests-search?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/handling-requests"; }, 100);
          }
        };
        $scope.passengerView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/air-search-passenger?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/air-passenger"; }, 100);
          }
        };
        $scope.privateView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/private-search-travel?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/private-travel"; }, 100);
          }
        };
        $scope.eventView = function () {
          if ($scope.data_change) {
            var startDate = $("#datepicker").val().split('-')[0];
            var endDate = $("#datepicker").val().split('-')[1];
            setTimeout(function () { window.location.href = "/admin/group-search-travel?startDate=" + startDate + "&endDate=" + endDate; }, 100);
          } else {
            setTimeout(function () { window.location.href = "/admin/group-travel"; }, 100);
          }
        };
        var init = function () {
          $scope.user = user;
          accessosloAPI.charters.getDashboard(function (response) {
            $scope.counts = { executive_count: response.executive, group_count: response.group, helicopter_count: response.helicopter, cargo_count: response.cargo, limousine_count: response.limousine, handling_count: response.handling, airpassenger_count: response.airpassenger, private_count: response.private, event_count: response.event, meet_count: response.meet, emptyleg_count: response.emptyleg };
            $scope.badges = { executive_badge: response.executive_badge, group_badge: response.group_badge, helicopter_badge: response.helicopter_badge, cargo_badge: response.cargo_badge, meet_badge: response.meet_badge, limousine_badge: response.limousine_badge, handling_badge: response.handling_badge, passenger_badge: response.passenger_badge, private_badge: response.private_badge, event_badge: response.event_badge, emptyleg_badge: response.emptyleg_badge };
            $scope.$apply();
            if ($scope.badges.executive_badge != 0) {
              $(".executive_badge").attr('style', "display:inline;");
              $(".executive_badge").html($scope.badges.executive_badge);
            }
            if ($scope.badges.group_badge != 0) {
              $(".group_badge").attr('style', "display:inline;");
              $(".group_badge").html($scope.badges.group_badge);
            }
            if ($scope.badges.helicopter_badge != 0) {
              $(".helicopter_badge").attr('style', "display:inline;");
              $(".helicopter_badge").html($scope.badges.helicopter_badge);
            }
            if ($scope.badges.cargo_badge != 0) {
              $(".cargo_badge").attr('style', "display:inline;");
              $(".cargo_badge").html($scope.badges.cargo_badge);
            }
            if ($scope.badges.meet_badge != 0) {
              $(".meet_badge").attr('style', "display:inline;");
              $(".meet_badge").html($scope.badges.meet_badge);
            }
            if ($scope.badges.limousine_badge != 0) {
              $(".limousine_badge").attr('style', "display:inline;");
              $(".limousine_badge").html($scope.badges.limousine_badge);
            }
            if ($scope.badges.handling_badge != 0) {
              $(".handling_badge").attr('style', "display:inline;");
              $(".handling_badge").html($scope.badges.handling_badge);
            }
            if ($scope.badges.passenger_badge != 0) {
              $(".passenger_badge").attr('style', "display:inline;");
              $(".passenger_badge").html($scope.badges.passenger_badge);
            }
            if ($scope.badges.event_badge != 0) {
              $(".event_badge").attr('style', "display:inline;");
              $(".event_badge").html($scope.badges.event_badge);
            }
            if ($scope.badges.emptyleg_badge != 0) {
              $(".emptyleg_badge").attr('style', "display:inline;");
              $(".emptyleg_badge").html($scope.badges.emptyleg_badge);
            }
          });
          $("#datepicker").daterangepicker({ minDate: new Date() });
          $('input[name="datepicker"]').on('apply.daterangepicker', function (ev, picker) {
            $scope.data_change = true;
            var data = {
              startDate: $("#datepicker").val().split('-')[0],
              endDate: $("#datepicker").val().split('-')[1]
            };
            accessosloAPI.charters.searchDashboard(data, function (response) {
              $scope.counts = { executive_count: response.executive, group_count: response.group, helicopter_count: response.helicopter, cargo_count: response.cargo, limousine_count: response.limousine, handling_count: response.handling, airpassenger_count: response.airpassenger, private_count: response.private, event_count: response.event, meet_count: response.meet, emptyleg_count: response.emptyleg };
              $scope.$apply();
            });
          });
        };
  
        init();
      }
    };
  }]);
    
  admin.directive('accessosloPost', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/admin/single-post/view.html',
      scope: {},
      controller: function ($scope) {
        $scope.user = {};
        $scope.postData = {};
        $scope.postTitle = "", $scope.current_lang = "en", $scope.get_post = "";
        $scope.is_img = false, $scope.is_post_img = false;
        var type = $(".page-container").data('type');
        var get_post = $(".page-container").data("source");

        // get the even of change language
        $("#cms_lang").on('change', function (e) {
          if (this.value == "Norway") {
            $scope.current_lang = "nb";
            $("#post_title").summernote('code', get_post.nb_post_title);
            $("#post_description").summernote('code', get_post.nb_post_description);
            $("#meta_title").summernote('code', get_post.nb_meta_title);
            $("#meta_description").summernote('code', get_post.nb_meta_description);
          } else {
            $scope.current_lang = "en";
            $("#post_title").summernote('code', get_post.en_post_title);
            $("#post_description").summernote('code', get_post.en_post_description);
            $("#meta_title").summernote('code', get_post.en_meta_title);
            $("#meta_description").summernote('code', get_post.en_meta_description);
          }
        });

        // create a new post and get post id if action is creating post
        $('#post_title').on('summernote.blur', function (we, contents, $editable) {
          var post_title_plain = $("#post_title").summernote('code');
          if (type == "new") {
            var data = { 
              "author": user.first_name + " " + user.last_name,
              "post_title_plain": $(post_title_plain).text()
            };
            if ($scope.current_lang == "nb") {
              data.nb_post_title = $("#post_title").summernote('code');
            } else {
              data.en_post_title = $("#post_title").summernote('code');
            }
            accessosloAPI.stores.SavePosts(data, function (response) {
              get_post = response;
              $scope.is_post_img = true;
              setTimeout(initDropZone, 100);
              $scope.$apply();
            });
          } else {
            if ($scope.current_lang == "nb") {
              get_post.nb_post_title = $("#post_title").summernote('code');
            } else {
              get_post.en_post_title = $("#post_title").summernote('code');
              if ($(post_title_plain).text() == "") {
                get_post.post_title_plain = post_title_plain;
              } else {
                get_post.post_title_plain = $(post_title_plain).text();
              }
            }
          }
        });

        // update post data when the editor is updated
        $('#post_description').on('summernote.blur', function (we, contents, $editable) {
          if ($scope.current_lang == "nb") {
            get_post.nb_post_description = $("#post_description").summernote('code');
          } else {
            get_post.en_post_description = $("#post_description").summernote('code');
          }
        });
        $('#meta_title').on('summernote.blur', function (we, contents, $editable) {
          if ($scope.current_lang == "nb") {
            get_post.nb_meta_title = $("#meta_title").summernote('code');
          } else {
            get_post.en_meta_title = $("#meta_title").summernote('code');
          }
        });
        $('#meta_description').on('summernote.blur', function (we, contents, $editable) {
          if ($scope.current_lang == "nb") {
            get_post.nb_meta_description = $("#meta_description").summernote('code');
          } else {
            get_post.en_meta_description = $("#meta_description").summernote('code');
          }
        });

        // image upload functions
        var onPostImageUploadSuccess = function (file, response) {
          get_post.post_img = response;
        };
        var onPageImageUploadSuccess = function (file, response) {
          get_post.single_img = response;
        };
        var onSendingImage = function (file, xhr, formData) {
          formData.append("id", get_post.id);
        };
        var initDropZone = function () {
          var dropzone = new Dropzone("#post-image", {
            url: accessosloAPI.stores.getPageImageUploadURL(),
            acceptedFiles: 'image/png, image/jpeg'
          });
          dropzone.on("sending", onSendingImage);
          dropzone.on("success", onPostImageUploadSuccess);
          dropzone = new Dropzone("#single-image", {
            url: accessosloAPI.stores.getPostImageUploadURL(),
            acceptedFiles: 'image/png, image/jpeg'
          });
          dropzone.on("sending", onSendingImage);
          dropzone.on("success", onPageImageUploadSuccess);
        };

        $scope.Save = function () {
          var post_title_plain = $("#post_title").summernote('code');
          if (post_title_plain != "<p><br></p>" && post_title_plain != "") { // validation check if post is created or not
            get_post.author = user.first_name + " " + user.last_name;
            accessosloAPI.stores.UpdatePosts(get_post, function (response) {
              setTimeout(function () { window.location.href = "/admin/posts"; }, 100);
            });
          } else {
            if (confirm("You didn't complete post setup. Are you sure to leave?")) {
              setTimeout(function () { window.location.href = "/admin/posts"; }, 100);
            }
          }
        };

        $scope.Publish = function () {
          var post_title_plain = $("#post_title").summernote('code');
          if (post_title_plain != "<p><br></p>" && post_title_plain != "") { // validation check if post is created or not
            get_post.author = user.first_name + " " + user.last_name;
            accessosloAPI.stores.PublishPosts(get_post, function (response) {
              setTimeout(function () { window.location.href = "/admin/posts"; }, 100);
            });
          } else {
            if (confirm("You didn't complete post setup. Are you sure to leave?")) {
              setTimeout(function () { window.location.href = "/admin/posts"; }, 100);
            }
          }
        };  

        var init = function () {
          if (user.img) { $scope.is_img = true; }
          if (type == "new") {
            $scope.postTitle = "New post";
          } else {
            $scope.postTitle = "Edit post";
            $scope.is_post_img = true;
            setTimeout(initDropZone, 100);
          }
          $scope.user = user;
          $("#page_title").summernote({ height: 100 });
          $("#post_title").summernote('code', get_post.en_post_title);
          $("#post_description").summernote({ height: 200 });
          $("#post_description").summernote('code', get_post.en_post_description);
          $("#meta_title").summernote({ height: 100 });
          $("#meta_title").summernote('code', get_post.en_meta_title);
          $("#meta_description").summernote({ height: 200 });
          $("#meta_description").summernote('code', get_post.en_meta_description);
          $("#cms_lang").countrySelect({
            preferredCountries: ['us', 'no']
          });
        };
        init();
      }
    };
  }]);
    
  admin.directive('accessosloPage', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/admin/single-page/view.html',
      scope: {},
      controller: function ($scope, $http) {
        $scope.previous_slides = 0;
        $scope.is_upload = false; $scope.is_img = false; $scope.slide_images = false, $scope.team_member = false, $scope.is_banner_img = false;
        $scope.new_avatar = "", $scope.current_lang = "en";
        $scope.new_member = {};
        $scope.members = [];
        var page = $(".page-container").data("source");

        // get the even of change language
        $("#cms_lang").on('change', function (e) {
          if (this.value == "Norway") {
            $scope.current_lang = "nb";
            $("#page_title").summernote('code', page.nb_page_title);
            $("#page_content").summernote('code', page.nb_page_content);
            $("#meta_title").summernote('code', page.nb_meta_title);
            $("#meta_description").summernote('code', page.nb_meta_description);
          } else {
            $scope.current_lang = "en";
            $("#page_title").summernote('code', page.en_page_title);
            $("#page_content").summernote('code', page.en_page_content);
            $("#meta_title").summernote('code', page.en_meta_title);
            $("#meta_description").summernote('code', page.en_meta_description);
          }
        });
        // save page info
        $scope.Save = function () {
          var page_title_plain = $("#page_title").summernote('code');
          if (page_title_plain != "<p><br></p>" && page_title_plain != "") { // validation check if page is created or not
            page.author = user.first_name + " " + user.last_name;

            var text = $(".uploaded_gallery").html();
            if (text != "") {
              var x = document.getElementsByClassName("uploaded_gallery");
              var y = x[0].getElementsByClassName("pip");
              var data = [];
              for (var i = 0; i < y.length; i++) {
                data.push({
                  page_id: page.id,
                  image: y[i].children[0].src,
                  length: y.length + $scope.previous_slides
                });
              }
              data.forEach(function(sel) {
                accessosloAPI.stores.SlideImageUpload(sel, function (response) {
                  if (response.success == "finish") {
                    accessosloAPI.stores.SavePage(page, function (response) {
                      setTimeout(function () { window.location.href = "/admin/pages"; }, 100);
                    });
                  }
                });
              });
            } else {
              accessosloAPI.stores.SavePage(page, function (response) {
                setTimeout(function () {
                  window.location.href = "/admin/pages";
                }, 100);
              });
            }
          } else {
            if (confirm("You didn't complete page setup. Are you sure to leave?")) {
              setTimeout(function () { window.location.href = "/admin/pages"; }, 100);
            }
          }
        };
        // update and publish page
        $scope.Publish = function () {
          var page_title_plain = $("#page_title").summernote('code');
          if (page_title_plain != "<p><br></p>") { // validation check if page is created or not
            page.author = user.first_name + " " + user.last_name;

            var text = $(".uploaded_gallery").html();
            if (text != "") {
              var x = document.getElementsByClassName("uploaded_gallery");
              var y = x[0].getElementsByClassName("pip");
              var data = [];
              for (var i = 0; i < y.length; i++) {
                data.push({
                  page_id: page.id,
                  image: y[i].children[0].src,
                  length: y.length + $scope.previous_slides
                });
              }
              data.forEach(function(sel) {
                accessosloAPI.stores.SlideImageUpload(sel, function (response) {
                  if (response.success == "finish") {
                    accessosloAPI.stores.PublishPage(page, function (response) {
                      setTimeout(function () { window.location.href = "/admin/pages"; }, 100);
                    });
                  }
                });
              });
            } else {
              accessosloAPI.stores.PublishPage(page, function (response) {
                setTimeout(function () {
                  window.location.href = "/admin/pages";
                }, 100);
              });
            }
          } else {
            if (confirm("You didn't complete page setup. Are you sure to leave?")) {
              setTimeout(function () { window.location.href = "/admin/pages"; }, 100);
            }
          }
        };

        // upload banner image functions 
        var onImageUploadSuccess = function (file, response) {
          page.banner_img = response;
        };
        var onSendingImage = function (file, xhr, formData) {
          formData.append("id", page.id);
        };
        var initDropZone = function () {
          var dropzone = new Dropzone("#image-uploader", {
            url: accessosloAPI.stores.getBannerImageUploadURL(),
            acceptedFiles: 'image/png, image/jpeg'
          });
          dropzone.on("sending", onSendingImage);
          dropzone.on("success", onImageUploadSuccess);
        };

        // create a new page and get page id if action is creating page 
        $('#page_title').on('summernote.blur', function (we, contents, $editable) {
          var page_title_plain = $("#page_title").summernote('code');
          if (page == "" && page_title_plain != "<p><br></p>") {
            var data = { 
              "author": user.first_name + " " + user.last_name,
              "page_title_plain": $(page_title_plain).text()
            };
            if ($scope.current_lang == "nb") {
              data.nb_page_title = $("#page_title").summernote('code');
            } else {
              data.en_page_title = $("#page_title").summernote('code');
            }
            accessosloAPI.stores.CreatePage(data, function (response) {
              page = response;
              $scope.is_banner_img = true;
              $scope.$apply();
            });
          } else {
            if ($scope.current_lang == "nb") {
              page.nb_page_title = $("#page_title").summernote('code');
            } else {
              page.en_page_title = $("#page_title").summernote('code');
              page.page_title_plain = $(page_title_plain).text();
            }
          }
        });
        // update page data when the editor is updated
        $('#page_content').on('summernote.blur', function (we, contents, $editable) {
          if ($scope.current_lang == "nb") {
            page.nb_page_content = $("#page_content").summernote('code');
          } else {
            page.en_page_content = $("#page_content").summernote('code');
          }
        });
        $('#meta_title').on('summernote.blur', function (we, contents, $editable) {
          if ($scope.current_lang == "nb") {
            page.nb_meta_title = $("#meta_title").summernote('code');
          } else {
            page.en_meta_title = $("#meta_title").summernote('code');
          }
        });
        $('#meta_description').on('summernote.blur', function (we, contents, $editable) {
          if ($scope.current_lang == "nb") {
            page.nb_meta_description = $("#meta_description").summernote('code');
          } else {
            page.en_meta_description = $("#meta_description").summernote('code');
          }
        });

        // member CRUD functionalities 
        $scope.add_member = function () {
          if ($("#new_member_form").valid()) {
            accessosloAPI.stores.AddNewMember($scope.new_member, function (response) {
              $scope.members.push(response);
              $scope.new_member = {};
              $scope.$apply();
            });
          }
        };
        $scope.update_member = function (member) {
          if (member.avatar == null && $scope.new_avatar != null) {
            member.avatar = $scope.new_avatar;
            $scope.new_avatar = null;
          }
          accessosloAPI.stores.UpdateMember(member, function (response) {
            $scope.members = response;
            $scope.$apply();
          });
        };
        $scope.remove_member = function (member) {
          accessosloAPI.stores.DeleteMember(member, function (response) {
            $scope.members = response;
            $scope.$apply();
          });
        };
        $scope.uploadedFile = function (element) {
          $scope.$apply(function ($scope) {
            $scope.files = element.files;
          });
          $http({
            url: "/stores/save-member-avatar",
            method: "POST",
            processData: false,
            headers: { 'Content-Type': undefined },
            data: $scope.formdata,
            transformRequest: function (data) {
              var formData = new FormData();
              var file = $scope.files[0];
              formData.append("file_upload", file); //pass the key name by which we will recive the file
  
              angular.forEach(data, function (value, key) {
                formData.append(key, value);
              });
  
              return formData;
            }
          }).then(function (success) {
            $scope.new_member.avatar = success.data.data;
          }, function (error) {
            alert("Something Error in form process");
          });
        };
        $scope.removeAvatar = function (member) {
          accessosloAPI.stores.RemoveAvatar(member, function (response) {
            $scope.members = response;
            $scope.$apply();
          });
        };
        $scope.uploadExistingAvatar = function (element) {
          $scope.$apply(function ($scope) {
            $scope.files = element.files;
          });
          $http({
            url: "/stores/save-member-avatar",
            method: "POST",
            processData: false,
            headers: { 'Content-Type': undefined },
            data: $scope.formdata,
            transformRequest: function (data) {
              var formData = new FormData();
              var file = $scope.files[0];
              formData.append("file_upload", file); //pass the key name by which we will recive the file
  
              angular.forEach(data, function (value, key) {
                formData.append(key, value);
              });
  
              return formData;
            },
          }).then(function (success) {
            $scope.new_avatar = success.data.data;
          }, function (error) {
            alert("Something Error in form process");
          });
        };
        
        // upload sub banner and gallery images for destination pages
        $("#img_path").on('change', function (e) {
          var files = e.target.files, filesLength = files.length;
          for (var i = 0; i < filesLength; i++) {
            var f = files[i];
            var fileReader = new FileReader();
            fileReader.onload = (function (e) {
              var file = e.target;
              var image_section = "<div class=\"pip\">" +
                "<img class=\"imageThumb\" src=\"" + e.target.result + "\" title=\"" + file.name + "\"/>" +
                "<br/><p class=\"remove\">remove</p></div>";
              $(".uploaded_gallery").append(image_section);
              $(".remove").click(function () {
                $(this).parent(".pip").remove();
              });
            });
            fileReader.readAsDataURL(f);
          }
        });
        $("#img_sub_banner").on('change', function () {
          var formdata = new FormData();
          formdata.append('file', this.files[0]);
          formdata.append('id', page.id);
          $.ajax({
            type: 'post',
            dataType: 'json',
            url: '/stores/subImage-page',
            data: formdata,
            processData: false,
            contentType: false,
            headers: {
              'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            success: function (e) {
              console.log(e);
            }
          });
        });

        // init function
        var init = function () {
          if (user.img) {
            $scope.is_img = true;
          }
          if (page) {
            $scope.is_banner_img = true;
            setTimeout(initDropZone, 100);
          }
          $scope.user = user;
          if (page.id == 15 || page.id == 41 || page.id == 42 || page.id == 43 || page.id == 44 || page.id == 45 || page.id == 46 || page.id == 47 || page.id == 48) {
            $scope.slide_images = true;
            $(".uploaded_gallery").html("");
            var data = { id: page.id };
            accessosloAPI.stores.SlideImageGet(data, function (response) {
              $scope.previous_slides = response.count;
              if (response.count != 0) {
                $(".slide_image_gallery").attr('style', 'display: block;');
                response.images.forEach(function(sel) {
                  $(".previous_content").append("<div class='pip'><img src='" + sel.path + "'>" + "<br/><p id='p_remove" + sel.id + "'>remove</p></div>");
                  $("#p_remove" + sel.id).click(function () {
                    var data = { id: sel.id };
                    accessosloAPI.stores.SlideImageDelete(data, function (response) {
                      window.location = window.location.protocol + "//" + window.location.hostname + "/admin/single-page/" + page.id;
                    });
                  });
                });
              }
            });
          } else if (page.id == 20) {
            $scope.team_member = true;
            accessosloAPI.stores.getMembers(function (response) {
              $scope.members = response;
              $scope.$apply();
            });
          }
          $("#page_title").summernote({ height: 100 });
          $("#page_title").summernote('code', page.en_page_title);
          $("#page_content").summernote({ height: 200 });
          $("#page_content").summernote('code', page.en_page_content);
          $("#meta_title").summernote({ height: 50 });
          $("#meta_title").summernote('code', page.en_meta_title);
          $("#meta_description").summernote({ height: 150 });
          $("#meta_description").summernote('code', page.en_meta_description);
          $("#cms_lang").countrySelect({
            preferredCountries: ['us', 'no']
          });
          $("#new_member_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  admin.directive('accessosloSettings', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/admin/setting/view.html',
      scope: {},
      controller: function ($scope) {
        $scope.is_img = false;
        $scope.imageUpload = false;
        $scope.is_password_form = false;
        $scope.user_data = { profile_img: "" };
        var onImageUploadSuccess = function (file, response) {
          if (response.success) {
            $scope.user_data.profile_img = response.data;
            $scope.is_img = true;
            $scope.$apply();
          }
        };
        var onSendingImage = function (file, xhr, formData) {
          formData.append("id", user.id);
        };
        var initDropZone = function () {
          var dropzone = new Dropzone("#image-uploader", {
            url: accessosloAPI.users.getProfileImageUploadURL(),
            acceptedFiles: 'image/png, image/jpeg'
          });
          dropzone.on("sending", onSendingImage);
          dropzone.on("success", onImageUploadSuccess);
        };
        $scope.UploadImage = function () {
          $scope.imageUpload = true;
          setTimeout(initDropZone, 100);
        };
        $scope.OnSave = function () {
          if ($("#admin_phone").intlTelInput('isValidNumber')) {
            $("#admin_phone").attr('style', 'border: 1px solid #7bc525');
            if ($("#personal_form").valid()) {
              var full_name = $("#full_name").val();
              var data = {
                id: user.id,
                first_name: full_name.split(' ')[0],
                last_name: full_name.split(' ')[1],
                phone: $("#admin_phone").intlTelInput('getNumber'),
                email: $("#email").val()
              };
              accessosloAPI.users.saveProfile(data, function (response) {
                alert("Your personal information has been updated.");
                window.location.reload();
              });
            }
          } else {
            $("#admin_phone").attr('style', 'border: 1px solid red');
          }
          $("#old_password").focus(function () {
            $scope.is_password_form = true;
          });
          if ($scope.is_password_form) {
            if ($("#password_form").valid()) {
              if ($("#new_password").val() == $("#confirm_password").val()) {
                var credential_data = {
                  user_id: user.id,
                  old_password: $("#old_password").val(),
                  new_password: $("#new_password").val()
                };
                accessosloAPI.users.changePassword(credential_data, function (response) {
                  if (response.success == "success") {
                    alert("Your password has been updated.");
                    window.location.reload();
                  } else if (response.success == "error") {
                    alert("Your old password does not matched.");
                  }
                });
              } else {
                alert("The password and confirmation password do not match.");
              }
            }
          }
        };
        var init = function () {
          $("#full_name").val(user.first_name + " " + user.last_name);
          $("#admin_phone").val(user.phone);
          $("#email").val(user.email);
          if (user.img) {
            $scope.user_data.profile_img = user.img;
            $scope.is_img = true;
          }
          $("#admin_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#personal_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#password_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          accessosloAPI.charters.getDashboard(function (response) {
            $scope.counts = { executive_count: response.executive, group_count: response.group, helicopter_count: response.helicopter, cargo_count: response.cargo, limousine_count: response.limousine, handling_count: response.handling, airpassenger_count: response.airpassenger, private_count: response.private, event_count: response.event, meet_count: response.meet };
            $scope.badges = { executive_badge: response.executive_badge, group_badge: response.group_badge, helicopter_badge: response.helicopter_badge, cargo_badge: response.cargo_badge, meet_badge: response.meet_badge, limousine_badge: response.limousine_badge, handling_badge: response.handling_badge, passenger_badge: response.passenger_badge, private_badge: response.private_badge, event_badge: response.event_badge };
            $scope.$apply();
            if ($scope.badges.executive_badge != 0) {
              $(".executive_badge").attr('style', "display:inline;");
              $(".executive_badge").html($scope.badges.executive_badge);
            }
            if ($scope.badges.group_badge != 0) {
              $(".group_badge").attr('style', "display:inline;");
              $(".group_badge").html($scope.badges.group_badge);
            }
            if ($scope.badges.helicopter_badge != 0) {
              $(".helicopter_badge").attr('style', "display:inline;");
              $(".helicopter_badge").html($scope.badges.helicopter_badge);
            }
            if ($scope.badges.cargo_badge != 0) {
              $(".cargo_badge").attr('style', "display:inline;");
              $(".cargo_badge").html($scope.badges.cargo_badge);
            }
            if ($scope.badges.meet_badge != 0) {
              $(".meet_badge").attr('style', "display:inline;");
              $(".meet_badge").html($scope.badges.meet_badge);
            }
            if ($scope.badges.limousine_badge != 0) {
              $(".limousine_badge").attr('style', "display:inline;");
              $(".limousine_badge").html($scope.badges.limousine_badge);
            }
            if ($scope.badges.handling_badge != 0) {
              $(".handling_badge").attr('style', "display:inline;");
              $(".handling_badge").html($scope.badges.handling_badge);
            }
            if ($scope.badges.passenger_badge != 0) {
              $(".passenger_badge").attr('style', "display:inline;");
              $(".passenger_badge").html($scope.badges.passenger_badge);
            }
            if ($scope.badges.event_badge != 0) {
              $(".event_badge").attr('style', "display:inline;");
              $(".event_badge").html($scope.badges.event_badge);
            }
          });
        };
        init();
      }
    };
  }]);
  
  member.directive('accessosloMemberLimousine', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/limousine.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.main_step1 = true; $scope.main_step2 = false;
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_return = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0;
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        $scope.vm = {
          address: {}
        };

        // select car options
        $scope.getCarType = function () {
          if ($scope.requestData.type_car == "S-klasse") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Tesla Model X") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Viano") { $scope.total_cost = 2600; $scope.limo_price = "kr 2600,- incl. vat."; $scope.modal_price = "kr 2600,-"; $scope.requestData.total_cost = Math.round(2600 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Minibuss") { $scope.total_cost = 3400; $scope.limo_price = "kr 3400,- incl. vat."; $scope.modal_price = "kr 3400,-"; $scope.requestData.total_cost = Math.round(3400 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
        };
        
        $scope.Continue = function () {
          if ($("#limousine_step1_form").valid()) {
            $scope.main_step1 = false; $scope.main_step2 = true;
            if (user.first_name != null || user.last_name != null) {
              $scope.requestData.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.requestData.email = user.email;
            }
            if (user.phone != null) {
              $("#limousine_phone").intlTelInput("setNumber", user.phone);
            }
            if (user.company != null) {
              $scope.requestData.company = user.company;
            }
          }
        };

        //select flight type
        $scope.getFlightType = function (type) {
          if (type == "Round Way") {
            $scope.is_return = true;
            $scope.limo_price = "kr " + 2 * $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + 2* $scope.total_cost + ",-";
          } else {
            $scope.is_return = false;
            $scope.limo_price = "kr " + $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + $scope.total_cost + ",-";
          }
          $scope.requestData.type_flight = type;
        };
        
        $scope.LimousinePayModal = function() {
          $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
          if ($("input[name='limo_flightType']:checked").val() == undefined) {
            $(".radio").attr('style', 'border: 1px solid red;');
          }
          $("input[name='limo_flightType']").change(function (e) {
            $(".radio").attr('style', 'border: none;');
          });
          $scope.requestData.phone = $("#limousine_phone").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          if ($("#limousine_step2_form").valid()) {
            if ($("#limousine_phone").intlTelInput('isValidNumber')) {
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.limousine_booking($scope.requestData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Book & Pay");
                $scope.charter_data = response;
                $scope.$apply();
                $(".limousine_login_payment").modal('show');
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };

        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#limousine_passenger_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#limousine_passenger_country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#limousine_payment_form").valid()) {
                var data = {
                  type: "limousine",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#limousine-paymentProcess").modal('hide');
                });
              }
            } else {
              var limo_data = {
                item: "Airport Limousine",
                item_number: $scope.charter_data.id,
                type: 'limousine',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: limo_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        
        //get live currency rate
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };

        var init = function () {
          getCurrency();
          accessosloAPI.users.getPassengers(user, function (response) {
            response.forEach(function(sel) {
              var passenger = {
                id: sel.id,
                label: sel.first_name + " " + sel.last_name
              };
              $scope.passengers.push(passenger);
              $scope.$apply();
            });
          });
        
          // set step1 form validation
          $('#limousine_step1_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#limousine_datepicker").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_step1_form').validate().element("#limousine_datepicker");
            }
          });
          // set step2 form validation
          $("#limousine_step2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            },
            rules: {
              limo_travelers: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 3;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    return 5;
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 16;
                  }
                }
              },
              limo_luggage: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 2;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    if ($scope.requestData.travelers == "4") {
                      return 2;
                    } else if ($scope.requestData.travelers == "5") {
                      return 1;
                    } else {
                      return 4;
                    }
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 10;
                  }
                }
              }
            }
          });
          $("#return_limousine_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#limousine_step2_form').validate().element("#return_limousine_timepicker");
            }
          });
          $("#return_limousine_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_step2_form').validate().element("#return_limousine_datepicker");
            }
          });
          $("#limousine_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          // payment modal setting
          $("#limousine_passenger_country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#limousine_passenger_birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_passenger_form').validate().element("#limousine_passenger_birth");
            }
          });
          $("#limousine_passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_passenger_form').validate().element("#limousine_passport_expiry");
            }
          });
          $("#limousine_passenger_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#limousine_payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMemberMobileLimousine', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/limousine-mobile.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.main_step1 = true; $scope.main_step2 = false;
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_return = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0;
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        $scope.vm = {
          address: {}
        };

        // select car options
        $scope.getCarType = function () {
          if ($scope.requestData.type_car == "S-klasse") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Tesla Model X") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Viano") { $scope.total_cost = 2600; $scope.limo_price = "kr 2600,- incl. vat."; $scope.modal_price = "kr 2600,-"; $scope.requestData.total_cost = Math.round(2600 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Minibuss") { $scope.total_cost = 3400; $scope.limo_price = "kr 3400,- incl. vat."; $scope.modal_price = "kr 3400,-"; $scope.requestData.total_cost = Math.round(3400 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
        };
        
        $scope.Continue = function () {
          if ($("#limousine_mobile_step1_form").valid()) {
            $scope.main_step1 = false; $scope.main_step2 = true;
            if (user.first_name != null || user.last_name != null) {
              $scope.requestData.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.requestData.email = user.email;
            }
            if (user.phone != null) {
              $("#limousine_mobile_phone").intlTelInput("setNumber", user.phone);
            }
            if (user.company != null) {
              $scope.requestData.company = user.company;
            }
          }
        };

        //select flight type
        $scope.getFlightType = function (type) {
          if (type == "Round Way") {
            $scope.is_return = true;
            $scope.limo_price = "kr " + 2 * $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + 2* $scope.total_cost + ",-";
          } else {
            $scope.is_return = false;
            $scope.limo_price = "kr " + $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + $scope.total_cost + ",-";
          }
          $scope.requestData.type_flight = type;
        };
        
        $scope.LimousinePayModal = function() {
          $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
          if ($("input[name='limo_flightType']:checked").val() == undefined) {
            $(".radio").attr('style', 'border: 1px solid red;');
          }
          $("input[name='limo_flightType']").change(function (e) {
            $(".radio").attr('style', 'border: none;');
          });
          $scope.requestData.phone = $("#limousine_mobile_phone").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          if ($("#limousine_mobile_step2_form").valid()) {
            if ($("#limousine_mobile_phone").intlTelInput('isValidNumber')) {
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.limousine_booking($scope.requestData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Book & Pay");
                $scope.charter_data = response;
                $scope.$apply();
                $(".limousine_login_payment").modal('show');
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };

        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#limousine_mobile_passenger_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#limousine_mobile_passenger_country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#limousine_mobile_payment_form").valid()) {
                var data = {
                  type: "limousine",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#limousine-paymentProcess").modal('hide');
                });
              }
            } else {
              var limo_data = {
                item: "Airport Limousine",
                item_number: $scope.charter_data.id,
                type: 'limousine',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: limo_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        
        //get live currency rate
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };

        var init = function () {
          getCurrency();
          accessosloAPI.users.getPassengers(user, function (response) {
            response.forEach(function(sel) {
              var passenger = {
                id: sel.id,
                label: sel.first_name + " " + sel.last_name
              };
              $scope.passengers.push(passenger);
              $scope.$apply();
            });
          });
        
          // set step1 form validation
          $('#limousine_mobile_step1_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#limousine_mobile_datepicker").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_mobile_step1_form').validate().element("#limousine_mobile_datepicker");
            }
          });
          // set step2 form validation
          $("#limousine_mobile_step2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            },
            rules: {
              limo_travelers: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 3;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    return 5;
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 16;
                  }
                }
              },
              limo_luggage: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 2;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    if ($scope.requestData.travelers == "4") {
                      return 2;
                    } else if ($scope.requestData.travelers == "5") {
                      return 1;
                    } else {
                      return 4;
                    }
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 10;
                  }
                }
              }
            }
          });
          $("#return_limousine_mobile_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#limousine_mobile_step2_form').validate().element("#return_limousine_mobile_timepicker");
            }
          });
          $("#return_limousine_mobile_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_mobile_step2_form').validate().element("#return_limousine_mobile_datepicker");
            }
          });
          $("#limousine_mobile_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          // payment modal setting
          $("#limousine_mobile_passenger_country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#limousine_mobile_passenger_birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_mobile_passenger_form').validate().element("#limousine_mobile_passenger_birth");
            }
          });
          $("#limousine_mobile_passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limousine_mobile_passenger_form').validate().element("#limousine_mobile_passport_expiry");
            }
          });
          $("#limousine_mobile_passenger_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#limousine_mobile_payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMemberMeet', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/meet.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_arrival = false; $scope.is_departure = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true; $scope.return_setting = false;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0; $scope.meetCost = '';
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "meet",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#meetgreet-paymentProcess").modal('hide');
                });
              }
            } else {
              var meet_data = {
                item: "Meet & Greet",
                item_number: $scope.charter_data.id,
                type: 'meet',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: meet_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
  
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };
        $scope.getTravelers = function () {
          if (parseInt($scope.requestData.travelers) > 5) {
            var diff = parseInt($scope.requestData.travelers) - 5;
            var cost =  213 * diff + 1680;
            $scope.totalCost = "kr " + cost + ",-";
            $scope.meetCost = "kr " + cost + ",- incl. vat";
            $scope.requestData.total_cost = Math.round(cost * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK);
          } else {
            $scope.totalCost = "kr " + 1680 + ",-";
            $scope.meetCost = "kr " + 1680 + ",- incl. vat";
            $scope.requestData.total_cost = Math.round(1680 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK);
          }
        };
        $("#is_arrival").click( function(){
            if( $(this).is(':checked') ) {
              $scope.is_arrival = true;
              $(".inbound-box > .form-group > input").prop('disabled', false);
            } else {
              $scope.is_arrival = false;
              $(".inbound-box > .form-group > input").prop('disabled', true);
            }
        });
        $("#is_departure").click( function(){
          if( $(this).is(':checked') ) {
            $scope.is_departure = true;
            $(".outbound-box > .form-group > input").prop('disabled', false);
          } else {
            $scope.is_departure = false;
            $(".outbound-box > .form-group > input").prop('disabled', true);
          }
        });
        $scope.close_success = function() {
            $("#BookSuccessMessage_new").modal('hide');
            location.reload();
        };
        $scope.NewRequest = function () {
            location.reload();
        };        
        $scope.BookRequest = function () {
          $scope.requestData.phone = $("#meet_phone").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          $scope.requestData.is_arrival = $scope.is_arrival;
          $scope.requestData.is_departure = $scope.is_departure;
          if ($('#meet_flight_form').valid()) {
            if ($('#meet_phone').intlTelInput('isValidNumber')) {
              if ($scope.is_arrival == false && $scope.is_departure == false) {
                alert("please fill inbound/outbound form.");
              } else {
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.meet_booking($scope.requestData, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Book & Pay");
                  if (response.booking.travelers > 17) {
                    $("#CustomBookSuccessMessage").modal('show');
                  } else {
                    $scope.charter_data = response.booking;
                    $scope.$apply();
                    $("#meetgreet-paymentProcess").modal('show');
                  }                
                });
              }
            } else {
              alert("Invalid phone number!");
            }
          }
        };
        
        var init = function () {
          //set form validation
          getCurrency();
          accessosloAPI.users.getPassengers(user, function (response) {
            response.forEach(function(sel) {
              var passenger = {
                id: sel.id,
                label: sel.first_name + " " + sel.last_name
              };
              $scope.passengers.push(passenger);
              $scope.$apply();
            });
          });

          $('#meet_flight_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
                $(element).parent().addClass("error");
                $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parent().removeClass("error");
                $(element).parent().addClass("success");
            }
          });
          $("#meet_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#in_meet_datepicker").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
                $('#meet_flight_form').validate().element("#in_meet_datepicker");
            }
          });
          $("#out_meet_datepicker").datepicker({
              showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
              onClose: function () {
                  $('#meet_flight_form').validate().element("#out_meet_datepicker");
              }
          });
          $("#in_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#in_timepicker");
              }
          });
          $("#out_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#out_timepicker");
              }
          });
          $("#in_departure_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#in_departure_timepicker");
              }
          });
          $("#out_departure_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#out_departure_timepicker");
              }
          });
          
          // payment modal setting
          $("#meet_country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#meet_birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#meet_input_form').validate().element("#meet_birth");
            }
          });
          $("#meet_passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#meet_input_form').validate().element("#meet_passport_expiry");
            }
          });
          $("#meet_input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#meet_payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          if (user.first_name != null || user.last_name != null) {
            $scope.requestData.contact_person = user.first_name + " " + user.last_name;
          }
          if (user.email != null) {
            $scope.requestData.email = user.email;
          }
          if (user.phone != null) {
            $("#meet_phone").intlTelInput("setNumber", user.phone);
          }
          if (user.company != null) {
            $scope.requestData.company = user.company;
          }
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMemberMobileMeet', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/meet-mobile.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.main_step1 = true; $scope.main_step2 = false;
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_arrival = false; $scope.is_departure = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true; $scope.return_setting = false;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0; $scope.meetCost = '';
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };

        $scope.Continue = function () {
          if ($("#mobile_meet1_form").valid()) {
            $scope.main_step1 = false; $scope.main_step2 = true;
          }
        };

        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#mobile_meet_input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#mobile_meet_country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#mobile_meet_payment_form").valid()) {
                var data = {
                  type: "meet",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $(".meet_mobile_payment").modal('hide');
                });
              }
            } else {
              var meet_data = {
                item: "Meet & Greet",
                item_number: $scope.charter_data.id,
                type: 'meet',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: meet_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
  
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };
        $scope.getTravelers = function () {
          if (parseInt($scope.requestData.travelers) > 5) {
            var diff = parseInt($scope.requestData.travelers) - 5;
            var cost =  213 * diff + 1680;
            $scope.totalCost = "kr " + cost + ",-";
            $scope.meetCost = "kr " + cost + ",- incl. vat";
            $scope.requestData.total_cost = Math.round(cost * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK);
          } else {
            $scope.totalCost = "kr " + 1680 + ",-";
            $scope.meetCost = "kr " + 1680 + ",- incl. vat";
            $scope.requestData.total_cost = Math.round(1680 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK);
          }
        };
        $("#mobile_meet_is_arrival").click( function(){
            if( $(this).is(':checked') ) {
              $scope.is_arrival = true;
              $(".inbound-box > .form-group > input").prop('disabled', false);
            } else {
              $scope.is_arrival = false;
              $(".inbound-box > .form-group > input").prop('disabled', true);
            }
        });
        $("#mobile_meet_is_departure").click( function(){
          if( $(this).is(':checked') ) {
            $scope.is_departure = true;
            $(".outbound-box > .form-group > input").prop('disabled', false);
          } else {
            $scope.is_departure = false;
            $(".outbound-box > .form-group > input").prop('disabled', true);
          }
        });
        $scope.close_success = function() {
            $("#BookSuccessMessage_new").modal('hide');
            location.reload();
        };
        $scope.NewRequest = function () {
            location.reload();
        };        
        $scope.BookRequest = function () {
          $scope.requestData.phone = $("#mobile_meet_phone").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          $scope.requestData.is_arrival = $scope.is_arrival;
          $scope.requestData.is_departure = $scope.is_departure;
          if ($('#mobile_meet2_form').valid()) {
            if ($scope.is_arrival == false && $scope.is_departure == false) {
              alert("please fill inbound/outbound form.");
            } else {
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.meet_booking($scope.requestData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Book & Pay");
                if (response.booking.travelers > 17) {
                  $("#CustomBookSuccessMessage").modal('show');
                } else {
                  $scope.charter_data = response.booking;
                  $scope.$apply();
                  $(".meet_mobile_payment").modal('show');
                }                
              });
            }
          }
        };
        
        var init = function () {
          //set form validation
          getCurrency();
          accessosloAPI.users.getPassengers(user, function (response) {
            response.forEach(function(sel) {
              var passenger = {
                id: sel.id,
                label: sel.first_name + " " + sel.last_name
              };
              $scope.passengers.push(passenger);
              $scope.$apply();
            });
          });

          $('#mobile_meet1_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
                $(element).parent().addClass("error");
                $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parent().removeClass("error");
                $(element).parent().addClass("success");
            }
          });
          $("#mobile_meet_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $('#mobile_meet2_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
                $(element).parent().addClass("error");
                $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parent().removeClass("error");
                $(element).parent().addClass("success");
            }
          });
          $("#in_mobile_meet_datepicker").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
                $('#mobile_meet2_form').validate().element("#in_mobile_meet_datepicker");
            }
          });
          $("#out_mobile_meet_datepicker").datepicker({
              showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
              onClose: function () {
                  $('#mobile_meet2_form').validate().element("#out_mobile_meet_datepicker");
              }
          });
          $("#in_meet_mobile_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#mobile_meet2_form').validate().element("#in_meet_mobile_timepicker");
              }
          });
          $("#out_mobile_meet_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#mobile_meet2_form').validate().element("#out_mobile_meet_timepicker");
              }
          });
          $("#in_meet_mobile_departure_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#mobile_meet2_form').validate().element("#in_meet_mobile_departure_timepicker");
              }
          });
          $("#out_mobile_meet_departure_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#mobile_meet2_form').validate().element("#out_mobile_meet_departure_timepicker");
              }
          });
          
          // payment modal setting
          $("#mobile_meet_country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#mobile_meet_birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#mobile_meet_input_form').validate().element("#mobile_meet_birth");
            }
          });
          $("#mobile_meet_passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#mobile_meet_input_form').validate().element("#mobile_meet_passport_expiry");
            }
          });
          $("#mobile_meet_input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile_meet_payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          if (user.first_name != null || user.last_name != null) {
            $scope.requestData.contact_person = user.first_name + " " + user.last_name;
          }
          if (user.email != null) {
            $scope.requestData.email = user.email;
          }
          if (user.phone != null) {
            $("#mobile_meet_phone").intlTelInput("setNumber", user.phone);
          }
          if (user.company != null) {
            $scope.requestData.company = user.company;
          }
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMemberHandlingrequest', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/handling-request.html',
      scope: {},
      controller: function ($scope) {
        $scope.handlingData = {
          phone: "",
          email: "",
          person: ""
        };
        $scope.OnSend = function () {
          if ($("#handling_form").valid()) {
            if ($("#handling_phone").intlTelInput("isValidNumber")) {
              $scope.handlingData.phone = $("#handling_phone").intlTelInput("getNumber");
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.request($scope.handlingData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Send Request");
                $(".CustomBookSuccessMessage").modal('show');
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        $("#file_upload").on('change', function () {
          var formdata = new FormData();
          formdata.append('file', this.files[0]);
          $.ajax({
            type: 'post',
            dataType: 'json',
            url: '/stores/handling-document',
            data: formdata,
            processData: false,
            contentType: false,
            beforeSend: function (request) {
              request.setRequestHeader("X-CSRF-TOKEN", config.token);
            },
            success: function (e) {
              $scope.handlingData.attach_doc = e.data.path;
            }
          });
        });
  
        var init = function () {
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#outbound_date").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#handling_form").validate().element("#outbound_date");
            }
          });
          $("#inbound_date").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#handling_form").validate().element("#inbound_date");
            }
          });
          $("#handling_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.handlingData.person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.handlingData.email = user.email;
            }
            if (user.phone != null) {
              $("#handling_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#handling_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMemberExecutive', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/executive-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.executiveflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.passengers = []; $scope.passenger = {};
        $scope.OnContinue = function () {
          if ($("#executive1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.onFlightTypeChange = function () {
          if ($scope.executiveflight.flight_type == 'Round Way') {
            $(".return-datetime").attr('style', 'display: block');
            $("#return_exec_datepicker").prop('required', true);
            $("#return_exec_timepicker").prop('required', true);
          } else {
            $(".return-datetime").attr('style', 'display: none');
            $("#return_exec_datepicker").prop('required', false);
            $("#return_exec_timepicker").prop('required', false);
          }
        };
        $scope.OnBook = function () {
          if ($("#executive2_form").valid()) {
            if ($("#executive_phone").intlTelInput("isValidNumber")) {
              $scope.executiveflight.phone = $("#executive_phone").intlTelInput("getNumber");
              $scope.executiveflight.booking_type = "executive";
              $scope.executiveflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.create($scope.executiveflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("GET FREE QUOTE");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          } else {
            alert("Invalid phone number!");
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#executive_departure').typeahead('destroy');
              $('#executive_destination').typeahead('destroy');
              $("#executive_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#executive_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#executive_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#executive1_form").validate().element("#executive_datepicker");
            }
          });
          $("#executive_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#executive1_form').validate().element("#meet_datepicker");
            }
          });
          $("#return_exec_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#executive2_form').validate().element("#meet_datepicker");
            }
          });
          $("#return_exec_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#executive2_form').validate().element("#datepicker");
            }
          });
          $("#executive_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.executiveflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.executiveflight.email = user.email;
            }
            if (user.phone != null) {
              $("#executive_phone").intlTelInput("setNumber", user.phone);
            }
          }
          accessosloAPI.users.getPassengers(user, function (response) {
            $scope.passengers = response;
            $scope.$apply();
          });
          $("#executive1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#executive2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMemberGroup', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/group-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.groupflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.OnContinue = function () {
          if ($("#group1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.OnBook = function () {
          if ($("#group2_form").valid()) {
            if ($("#group_phone").intlTelInput("isValidNumber")) {
              $scope.groupflight.phone = $("#group_phone").intlTelInput("getNumber");
              $scope.groupflight.booking_type = "group";
              $scope.groupflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.create($scope.groupflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Send Request");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#group_departure').typeahead('destroy');
              $('#group_destination').typeahead('destroy');
              $("#group_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#group_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#group_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#group1_form").validate().element("#group_datepicker");
            }
          });
          $("#group_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.groupflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.groupflight.email = user.email;
            }
            if (user.phone != null) {
              $("#group_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#group1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#group2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
  
        init();
      }
    };
  }]);
  
  member.directive('accessosloMemberHelicopter', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/helicopter-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.helicopterflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.OnContinue = function () {
          if ($("#helicopter1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.OnBook = function () {
          if ($("#helicopter2_form").valid()) {
            if ($("#helicopter_phone").intlTelInput("isValidNumber")) {
              $scope.helicopterflight.phone = $("#helicopter_phone").intlTelInput("getNumber");
              $scope.helicopterflight.booking_type = "helicopter";
              $scope.helicopterflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.create($scope.helicopterflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("GET FREE QUOTE");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#helicopter_departure').typeahead('destroy');
              $('#helicopter_destination').typeahead('destroy');
              $("#helicopter_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#helicopter_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#helicopter_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#helicopter1_form").validate().element("#helicopter_datepicker");
            }
          });
          $("#helicopter_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.helicopterflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.helicopterflight.email = user.email;
            }
            if (user.phone != null) {
              $("#helicopter_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#helicopter1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#helicopter2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMemberCargo', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/cargo-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.cargoflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.OnContinue = function () {
          if ($("#cargo1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.OnBook = function () {
          if ($("#cargo2_form").valid()) {
            if ($("#cargo_phone").intlTelInput("isValidNumber")) {
              $scope.cargoflight.phone = $("#cargo_phone").intlTelInput("getNumber");
              $scope.cargoflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.cargo_booking($scope.cargoflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Get Free Quote");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        $scope.NewRequest = function () {
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#cargo_departure').typeahead('destroy');
              $('#cargo_destination').typeahead('destroy');
              $("#cargo_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#cargo_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#cargo_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#cargo1_form").validate().element("#cargo_datepicker");
            }
          });
          $("#cargo_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.cargoflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.cargoflight.email = user.email;
            }
            if (user.phone != null) {
              $("#cargo_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#cargo1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#cargo2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloPassenger', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/passengers/view.html',
      scope: {},
      controller: function ($scope) {
        $scope.passengers = [];
        $scope.passenger = {};
        $scope.OnDelete = function (passenger) {
          if (confirm("Are you sure to delete this passenger?")) {
            accessosloAPI.users.deletePassenger(passenger, function (response) {
              init();
            });
          }
        };
        var init = function () {
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          accessosloAPI.users.getPassengers(user, function (response) {
            $scope.passengers = response;
            $scope.$apply();
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMemberProfile', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/profile_settings/view.html',
      scope: {},
      controller: function ($scope) {
        var is_new = true;
        $scope.profile_data = {};
        $scope.OnConfirm = function () {
          if ($("#input_form").valid()) {
            if ($("#home-number").intlTelInput('isValidNumber')) {
              $scope.profile_data.user_id = user.id;
              $scope.profile_data.home_phone = $("#home-number").intlTelInput("getNumber");
              var selected_country = $("#country_address").countrySelect("getSelectedCountryData");
              $scope.profile_data.addInfo_country = selected_country.name;
              var country_billing = $("#country_billing").countrySelect("getSelectedCountryData");
              $scope.profile_data.billInfo_country = country_billing.name;
              if (is_new) {
                accessosloAPI.users.add_profile($scope.profile_data, function (response) {
                  alert("Your settings have been saved.");
                  setTimeout(function () { window.location.href = "/member/dashboard"; }, 0);
                });
              } else {
                accessosloAPI.users.update_profile($scope.profile_data, function (response) {
                  alert("Your settings have been saved.");
                  setTimeout(function () { window.location.href = "/member/dashboard"; }, 0);
                });
              }
            } else {
              alert("Invalid Phone number!");
            }
          }
        };
        var init = function () {
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px; float:right; margin-right:10px; margin-top:8px;');
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#home-number").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#country_address").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#country_billing").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#datepicker").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: '-110:-18',
            onClose: function () {
              $('#input_form').validate().element("#datepicker");
            }
          });
          var data = {
            id: user.id,
            destination: "get",
            email: user.email
          };
          accessosloAPI.users.getCustomer(data, function (response) {
            if (response) {
              $scope.profile_data = response;
              $("#home-number").intlTelInput("setNumber", response.home_phone);
              $("#country_address").countrySelect("setCountry", response.addInfo_country);
              is_new = false;
              $scope.$apply();
            } else {
              is_new = true;
              $scope.profile_data.gender = user.gender;
              $scope.profile_data.first_name = user.first_name;
              $scope.profile_data.last_name = user.last_name;
              $scope.profile_data.email = user.email;
              $scope.$apply();
              $("#home-number").intlTelInput("setNumber", user.phone);
              $("#gender").focus();
              $("#email").focus();
              $("#first_name").focus();
              $("#last_name").focus();
              $("#home-number").focus();
            }
          });
          accessosloAPI.charters.getMemberNotice(data, function (response) {
            if (response.member_notice != 0) {
              $(".member_notice").attr("style", "display:inline;");
              $(".member_notice").html(response.member_notice);
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMemberModal', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/upcoming_request/view.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.charter_data = {};
        $scope.newPassenger = {};
        $scope.estimate = {};
        $scope.is_return = true; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.passengers = [];
        $scope.selected_passenger = []; $scope.transfermail = ""; $scope.resultAddingMessage = "";
        $scope.creditpayment = {};
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
  
        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "executive",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#paymentProcess").modal('hide');
                });
              }
            } else {
              var executive_data = {
                item: "Executive Charter",
                item_number: $scope.estimate.id,
                type: 'charters',
                amount: $scope.estimate.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: executive_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // open modal
        var PaymentProcess = function () {
          $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
          $scope.charter_data = $(this).data('source');
          $scope.estimate = $(this).data("estimate");
          $scope.$apply();
          if ($scope.charter_data.return_date) {
            $scope.is_return = true;
          } else {
            $scope.is_return = false;
          }
          $("#paymentProcess").modal('show');
        };
        var init = function () {
          $(".charter_data").click(PaymentProcess);
          $("#country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#birth");
            }
          });
          $("#passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#passport_expiry");
            }
          });
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          accessosloAPI.users.getPassengers(user, function (response) {
            response.forEach(function(sel) {
              var passenger = {
                id: sel.id,
                label: sel.first_name + " " + sel.last_name
              };
              $scope.passengers.push(passenger);
              $scope.$apply();
            });
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloHomeEmptyleg', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/home/emptyleg.html',
      scope: {
        details: '='
      },
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.flight_data = {};
        $scope.flight_book_data = {};
        $scope.newPassenger = {};
        $scope.estimate = {};
        $scope.is_return = true; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.passengers = [];
        $scope.selected_passenger = []; $scope.transfermail = ""; $scope.resultAddingMessage = "";
        $scope.creditpayment = {};
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
  
        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                $scope.resultAddingMessage = "The passenger is added.";
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "emptyleg",
                  charter_id: $scope.flight_book_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#paymentProcess").modal('hide');
                });
              }
            } else {
              var emptyleg_data = {
                item: "Empty leg Flight",
                item_number: $scope.flight_book_data.id,
                type: 'empty',
                amount: $scope.flight_book_data.price,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: emptyleg_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
  
        $scope.confirm_request = function () {
          if ($("#request_form").valid()) {
            if ($("#emptyleg_tel").intlTelInput("isValidNumber")) {
              $scope.flight_book_data.phone = $("#emptyleg_tel").intlTelInput('getNumber');
              $scope.flight_book_data.gender = $("#emptyleg_gender").val();
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.emptyleg_booking($scope.flight_book_data, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Confirm & Pay");
                $("#modal-empty-leg").modal("hide");
                $scope.flight_book_data = response;
                $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
                if (user == null) {
                  var data = { email: $scope.flight_book_data.email };
                  accessosloAPI.users.getPassengers(data, function (response) {
                    response.forEach(function(sel) {
                      var passenger = {
                        id: sel.id,
                        label: sel.first_name + " " + sel.last_name
                      };
                      $scope.passengers.push(passenger);
                      $scope.$apply();
                    });
                  });
                }
                $scope.$apply();
                $('body').css('overflow', 'hidden');
                $('#emptyleg-paymentProcess').css('overflow', 'auto');
                $("#emptyleg-paymentProcess").modal('show');
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };
        // open modal
        $scope.FlightDetails = function () {
          $scope.flight_data = $scope.details;
          if ($scope.flight_data.currency == "GBP") {
            $scope.flight_data.symbol = "£";
          } else if ($scope.flight_data.currency == "EUR") {
            $scope.flight_data.symbol = "€";
          } else if ($scope.flight_data.currency == "CNY" || data.currency == "JPY") {
            $scope.flight_data.symbol = "¥";
          } else if ($scope.flight_data.currency == "NOK" || data.currency == "DKK") {
            $scope.flight_data.symbol = "kr";
          } else {
            $scope.flight_data.symbol = "$";
          }
          if (user) {
            $scope.flight_book_data = {
              gender: user.gender,
              phone: user.phone,
              email: user.email,
              contact_person: user.first_name + " " + user.last_name,
              company: user.company,
              departure: $scope.flight_data.departure,
              destination: $scope.flight_data.destination,
              end_date: $scope.flight_data.end_date,
              end_time: $scope.flight_data.end_time,
              partner_name: $scope.flight_data.partner_name,
              aircraft: $scope.flight_data.aircraft,
              price: $scope.flight_data.price,
              currency: $scope.flight_data.currency,
              is_add: '1',
              charter_id: $scope.flight_data.id,
              passengers: $scope.flight_data.seats
            };
            $("#emptyleg_gender").val(user.gender);
            $("#emptyleg_tel").intlTelInput('setNumber', user.phone);
          } else {
            $scope.flight_book_data = {
              gender: "",
              phone: "",
              email: "",
              contact_person: "",
              company: "",
              departure: $scope.flight_data.departure,
              destination: $scope.flight_data.destination,
              end_date: $scope.flight_data.end_date,
              end_time: $scope.flight_data.end_time,
              partner_name: $scope.flight_data.partner_name,
              aircraft: $scope.flight_data.aircraft,
              price: $scope.flight_data.price,
              currency: $scope.flight_data.currency,
              is_add: '1',
              charter_id: $scope.flight_data.id,
              passengers: $scope.flight_data.seats
            };
          }
          $("#modal-empty-leg").modal("show");
        };
  
        var init = function () {
          $("#country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#birth");
            }
          });
          $("#passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#passport_expiry");
            }
          });
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#emptyleg_tel").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#emptyleg_date").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#emptyleg_form').validate().element("#emptyleg_date");
            }
          });
          $("#emptyleg_time").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#emptyleg_form').validate().element("#emptyleg_time");
            }
          });
          $("#payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#request_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          if (user) {
            accessosloAPI.users.getPassengers(user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
            });
          }
        };
        init();
      }
    };
  }]);
  
  member.directive('accessosloHomeLimousine', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/home/limousine.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_return = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0;
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        $scope.vm = {
          address: {}
        };

        // select car options
        $scope.getCarType = function () {
          if ($scope.requestData.type_car == "S-klasse") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Tesla Model X") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Viano") { $scope.total_cost = 2600; $scope.limo_price = "kr 2600,- incl. vat."; $scope.modal_price = "kr 2600,-"; $scope.requestData.total_cost = Math.round(2600 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Minibuss") { $scope.total_cost = 3400; $scope.limo_price = "kr 3400,- incl. vat."; $scope.modal_price = "kr 3400,-"; $scope.requestData.total_cost = Math.round(3400 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
        };

        //Booking Modal
        $scope.LimousineBookingModal = function () {
          if($("#transport_form").valid()) {
            $("#limousine-modal").modal('show');
          }
        };

        //select flight type
        $scope.getFligtType = function () {
          if ($scope.requestData.type_flight == "One Way") {
            $scope.is_return = false;
            $scope.limo_price = "kr " + $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + $scope.total_cost + ",-";
          } else if ($scope.requestData.type_flight == "Round Way") {
            $scope.is_return = true;
            $scope.limo_price = "kr " + 2 * $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + 2* $scope.total_cost + ",-";
          }
        };
        
        $scope.LimousinePayModal = function() {
          $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
          $scope.requestData.phone = $("#limousine_tel").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          if ($("#limo_input_form").valid()) {
            if ($("#limousine_tel").intlTelInput('isValidNumber')) {
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.limousine_booking($scope.requestData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Book & Pay");
                $("#limousine-modal").modal('hide');
                $scope.charter_data = response;
                $scope.$apply();
                if (user) {
                  $("#limousine-paymentProcess").modal('show');
                } else {
                  $("#LoginModal").modal('show');
                }
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };

        //Login Modal
        $scope.Login = function () {
          $(".login-modal").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
          var userData = { email: $("#desktop_email").val(), password: $("#desktop_password").val() };
          accessosloAPI.users.login(userData, function (response) {
            $("#LoginModal").modal('hide');
            user = response.user;
            accessosloAPI.users.getPassengers(response.user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
              $("#limousine-paymentProcess").modal('show');
            });
          });
        };

        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "limousine",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#limousine-paymentProcess").modal('hide');
                });
              }
            } else {
              var limo_data = {
                item: "Airport Limousine",
                item_number: $scope.charter_data.id,
                type: 'limousine',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: limo_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        
        //get live currency rate
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };

        var init = function () {
          getCurrency();
          if (user) {
            if (user.first_name != null || user.last_name != null) {
              $scope.requestData.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.requestData.email = user.email;
            }
            if (user.phone != null) {
              $("#limousine_tel").intlTelInput("setNumber", user.phone);
            }
            if (user.company != null) {
              $scope.requestData.company = user.company;
            }
            accessosloAPI.users.getPassengers(user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
            });
          }
          //set default form validation
          $('#transport_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
                $(element).parent().addClass("error");
                $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parent().removeClass("error");
                $(element).parent().addClass("success");
            }
          });
          $("#transport_date").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
                $('#transport_form').validate().element("#transport_date");
            }
          });

          // set booking modal form validation
          $("#limo_input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            },
            rules: {
              limo_travelers: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 3;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    return 5;
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 16;
                  }
                }
              },
              limo_luggage: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 2;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    if ($scope.requestData.travelers == "4") {
                      return 2;
                    } else if ($scope.requestData.travelers == "5") {
                      return 1;
                    } else {
                      return 4;
                    }
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 10;
                  }
                }
              }
            }
          });
          $("#limousine_tel").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#return_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#limo_input_form').validate().element("#limo_return_timepicker");
            }
          });
          $("#return_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limo_input_form').validate().element("#limo_return_datepicker");
            }
          });
          
          // payment modal setting
          $("#country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#birth");
            }
          });
          $("#passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#passport_expiry");
            }
          });
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMobileHomeLimousine', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/home/limousine_mobile.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_return = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0;
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        $scope.vm = {
          address: {}
        };

        // select car options
        $scope.getCarType = function () {
          if ($scope.requestData.type_car == "S-klasse") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Tesla Model X") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Viano") { $scope.total_cost = 2600; $scope.limo_price = "kr 2600,- incl. vat."; $scope.modal_price = "kr 2600,-"; $scope.requestData.total_cost = Math.round(2600 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Minibuss") { $scope.total_cost = 3400; $scope.limo_price = "kr 3400,- incl. vat."; $scope.modal_price = "kr 3400,-"; $scope.requestData.total_cost = Math.round(3400 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
        };

        //Booking Modal
        $scope.LimousineMobileBookingModal = function () {
          if($("#mobile_transport_form").valid()) {
            $(".limousine_booking_mobile").modal('show');
          }
        };

        //select flight type
        $scope.getFligtType = function () {
          if ($scope.requestData.type_flight == "One Way") {
            $scope.is_return = false;
            $scope.limo_price = "kr " + $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + $scope.total_cost + ",-";
          } else if ($scope.requestData.type_flight == "Round Way") {
            $scope.is_return = true;
            $scope.limo_price = "kr " + 2 * $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + 2* $scope.total_cost + ",-";
          }
        };
        
        $scope.LimousinePayModal = function() {
          $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
          $scope.requestData.phone = $("#limousine_mobile_tel").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          if ($("#mobile_limo_input_form").valid()) {
            if ($("#limousine_mobile_tel").intlTelInput('isValidNumber')) {
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.limousine_booking($scope.requestData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Book & Pay");
                $scope.charter_data = response;
                $scope.$apply();
                if (user) {
                  $(".limousine_booking_mobile").modal('hide');
                  $(".limousine_login_payment").modal('show');
                } else {
                  $('.limousine_booking_mobile').on('hidden.bs.modal', function () {
                    var myEl = angular.element( document.querySelector( 'body' ) );
                    myEl.addClass('modal-open');
                    $(".limousine_login_mobile").modal('show');
                  });
                }
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };

        //Login Modal
        $scope.Login = function () {
          if($("#mobile-login-form").valid()) {
            $(".login-modal").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
            var userData = { email: $("#mobile_email").val(), password: $("#mobile_password").val() };
            accessosloAPI.users.login(userData, function (response) {
              $(".limousine_login_mobile").modal('hide');
              user = response.user;
              accessosloAPI.users.getPassengers(response.user, function (response) {
                response.forEach(function(sel) {
                  var passenger = {
                    id: sel.id,
                    label: sel.first_name + " " + sel.last_name
                  };
                  $scope.passengers.push(passenger);
                  $scope.$apply();
                });
                $(".limousine_login_payment").modal('show');
              });
            });
          }
        };

        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#mobile_input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#mobile_country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#mobile_payment_form").valid()) {
                var data = {
                  type: "limousine",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#limousine-paymentProcess").modal('hide');
                });
              }
            } else {
              var limo_data = {
                item: "Airport Limousine",
                item_number: $scope.charter_data.id,
                type: 'limousine',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: limo_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        
        //get live currency rate
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };

        var init = function () {
          getCurrency();
          if (user) {
            if (user.first_name != null || user.last_name != null) {
              $scope.requestData.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.requestData.email = user.email;
            }
            if (user.phone != null) {
              $("#limousine_mobile_tel").intlTelInput("setNumber", user.phone);
            }
            if (user.company != null) {
              $scope.requestData.company = user.company;
            }
            accessosloAPI.users.getPassengers(user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
            });
          }
          //set default form validation
          $('#mobile_transport_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
                $(element).parent().addClass("error");
                $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parent().removeClass("error");
                $(element).parent().addClass("success");
            }
          });
          $("#mobile_transport_date").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
                $('#mobile_transport_form').validate().element("#mobile_transport_date");
            }
          });

          // set booking modal form validation
          $("#mobile_limo_input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            },
            rules: {
              limo_travelers: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 3;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    return 5;
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 16;
                  }
                }
              },
              limo_luggage: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 2;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    if ($scope.requestData.travelers == "4") {
                      return 2;
                    } else if ($scope.requestData.travelers == "5") {
                      return 1;
                    } else {
                      return 4;
                    }
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 10;
                  }
                }
              }
            }
          });
          $("#limousine_mobile_tel").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#mobile_return_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#mobile_limo_input_form').validate().element("#limo_return_timepicker");
            }
          });
          $("#mobile_return_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#mobile_limo_input_form').validate().element("#limo_return_datepicker");
            }
          });
          
          // payment modal setting
          $("#mobile_country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#mobile_birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#mobile_input_form').validate().element("#mobile_birth");
            }
          });
          $("#mobile_passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#mobile_input_form').validate().element("#mobile_passport_expiry");
            }
          });
          $("#mobile_input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile_payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile-login-form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMemberEmptyleg', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/emptyleg/view.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.flight_data = {};
        $scope.flight_book_data = {};
        $scope.newPassenger = {};
        $scope.estimate = {};
        $scope.is_return = true; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true;
        $scope.passengers = [];
        $scope.selected_passenger = []; $scope.transfermail = ""; $scope.resultAddingMessage = "";
        $scope.creditpayment = {};
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
  
        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                $scope.resultAddingMessage = "The passenger is added.";
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "emptyleg",
                  charter_id: $scope.flight_book_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#paymentProcess").modal('hide');
                });
              }
            } else {
              var emptyleg_flight_data = {
                item: "Empty leg Flight",
                item_number: $scope.flight_book_data.id,
                type: 'empty',
                amount: $scope.flight_book_data.price,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: emptyleg_flight_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
  
        $scope.confirm_request = function () {
          if ($("#request_form").valid()) {
            if ($("#emptyleg_tel").intlTelInput("isValidNumber")) {
              $scope.flight_book_data.phone = $("#emptyleg_tel").intlTelInput('getNumber');
              $scope.flight_book_data.gender = $("#emptyleg_gender").val();
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.emptyleg_booking($scope.flight_book_data, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Confirm & Pay");
                $("#modal-empty-leg").modal("hide");
                $scope.flight_book_data = response;
                $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
                if (user == null) {
                  var data = { email: $scope.flight_book_data.email };
                  accessosloAPI.users.getPassengers(data, function (response) {
                    response.forEach(function(sel) {
                      var passenger = {
                        id: sel.id,
                        label: sel.first_name + " " + sel.last_name
                      };
                      $scope.passengers.push(passenger);
                      $scope.$apply();
                    });
                  });
                }
                $scope.$apply();
                $('body').css('overflow', 'hidden');
                $('#emptyleg-paymentProcess').css('overflow', 'auto');
                $("#emptyleg-paymentProcess").modal('show');
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };
        // open modal
        var FlightDetails = function () {
          $scope.flight_data = $(this).data('source');
          if ($scope.flight_data.currency == "GBP") {
            $scope.flight_data.symbol = "£";
          } else if ($scope.flight_data.currency == "EUR") {
            $scope.flight_data.symbol = "€";
          } else if ($scope.flight_data.currency == "CNY" || data.currency == "JPY") {
            $scope.flight_data.symbol = "¥";
          } else if ($scope.flight_data.currency == "NOK" || data.currency == "DKK") {
            $scope.flight_data.symbol = "Kr";
          } else {
            $scope.flight_data.symbol = "$";
          }
          if (user) {
            $scope.flight_book_data = {
              gender: user.gender,
              phone: user.phone,
              email: user.email,
              contact_person: user.first_name + " " + user.last_name,
              company: user.company,
              departure: $scope.flight_data.departure,
              destination: $scope.flight_data.destination,
              end_date: $scope.flight_data.end_date,
              end_time: $scope.flight_data.end_time,
              partner_name: $scope.flight_data.partner_name,
              aircraft: $scope.flight_data.aircraft,
              price: $scope.flight_data.price,
              currency: $scope.flight_data.currency,
              is_add: '1',
              charter_id: $scope.flight_data.id,
              passengers: $scope.flight_data.seats
            };
            $("#emptyleg_gender").val(user.gender);
            $("#emptyleg_tel").intlTelInput('setNumber', user.phone);
          } else {
            $scope.flight_book_data = {
              gender: "",
              phone: "",
              email: "",
              contact_person: "",
              company: "",
              departure: $scope.flight_data.departure,
              destination: $scope.flight_data.destination,
              end_date: $scope.flight_data.end_date,
              end_time: $scope.flight_data.end_time,
              partner_name: $scope.flight_data.partner_name,
              aircraft: $scope.flight_data.aircraft,
              price: $scope.flight_data.price,
              currency: $scope.flight_data.currency,
              is_add: '1',
              charter_id: $scope.flight_data.id,
              passengers: $scope.flight_data.seats
            };
          }
          $("#modal-empty-leg").modal("show");
        };
  
        var init = function () {
          $(".flight_details").click(FlightDetails);
          $("#country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#birth");
            }
          });
          $("#passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#passport_expiry");
            }
          });
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#emptyleg_tel").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#emptyleg_date").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#emptyleg_form').validate().element("#emptyleg_date");
            }
          });
          $("#emptyleg_time").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#emptyleg_form').validate().element("#emptyleg_time");
            }
          });
          $("#payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#request_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          if (user) {
            accessosloAPI.users.getPassengers(user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
            });
          }
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloLimoPayment', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/directives/airport-limo/view.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_return = true; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true; $scope.return_setting = false;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0;
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        $scope.vm = {
          address: {}
        };
        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "limousine",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#limousine-paymentProcess").modal('hide');
                });
              }
            } else {
              var limo_data = {
                item: "Airport Limousine",
                item_number: $scope.charter_data.id,
                type: 'limousine',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: limo_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // select car options
        $scope.getCarType = function () {
          if ($scope.requestData.type_car == "S-klasse") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Tesla Model X") { $scope.total_cost = 1990; $scope.limo_price = "kr 1990,- incl. vat."; $scope.modal_price = "kr 1990,-"; $scope.requestData.total_cost = Math.round(1990 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Viano") { $scope.total_cost = 2600; $scope.limo_price = "kr 2600,- incl. vat."; $scope.modal_price = "kr 2600,-"; $scope.requestData.total_cost = Math.round(2600 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
          else if ($scope.requestData.type_car == "Minibuss") { $scope.total_cost = 3400; $scope.limo_price = "kr 3400,- incl. vat."; $scope.modal_price = "kr 3400,-"; $scope.requestData.total_cost = Math.round(3400 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK); }
        };
        //select flight type
        $scope.getFlightType = function (type) {
          if (type == "Round Way") {
            $scope.return_setting = true;
            $scope.limo_price = "kr " + 2 * $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + 2* $scope.total_cost + ",-";
          } else {
            $scope.return_setting = false;
            $scope.limo_price = "kr " + $scope.total_cost + ",- incl. vat.";
            $scope.modal_price = "kr " + $scope.total_cost + ",-";
          }
          $scope.requestData.type_flight = type;
        };
        $scope.LimousinePayModal = function () {
          $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false;
          if ($("input[name='limo_flightType']:checked").val() == undefined) {
            $(".radio").attr('style', 'border: 1px solid red;');
          }
          $("input[name='limo_flightType']").change(function (e) {
            $(".radio").attr('style', 'border: none;');
          });
          $scope.requestData.phone = $("#limo-mobile-number").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          if ($("#limo_input_form").valid()) {
            if ($("#limo-mobile-number").intlTelInput('isValidNumber')) {
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.services.limousine_booking($scope.requestData, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Book & Pay");
                if (response.type_flight == "Round Way") {
                  $scope.is_return = true;
                } else {
                  $scope.is_return = false;
                }
                $scope.charter_data = response;
                $scope.$apply();
                if (user) {
                  $("#limousine-paymentProcess").modal('show');
                } else {
                  $("#LoginModal").modal('show');
                }
              });
            } else {
              alert("Invalid phone number.");
            }
          }
        };

        $scope.Login = function () {
          $(".login-modal").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
          var userData = { email: $("#email").val(), password: $("#password").val() };
          accessosloAPI.users.login(userData, function (response) {
            $("#LoginModal").modal('hide');
            user = response.user;
            accessosloAPI.users.getPassengers(response.user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
              $("#limousine-paymentProcess").modal('show');
            });
          });
        };

        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };
        var init = function () {
          getCurrency();
          //set form validation
          $("#limo_input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            },
            rules: {
              limo_travelers: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 3;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    return 5;
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 16;
                  }
                }
              },
              limo_luggage: {
                required: true,
                max: function () {
                  if ($scope.requestData.type_car == "S-klasse") {
                    return 2;
                  } else if ($scope.requestData.type_car == "Tesla Model X") {
                    if ($scope.requestData.travelers == "4") {
                      return 2;
                    } else if ($scope.requestData.travelers == "5") {
                      return 1;
                    } else {
                      return 4;
                    }
                  } else if ($scope.requestData.type_car == "Viano") {
                    return 7;
                  } else if ($scope.requestData.type_car == "Minibuss") {
                    return 10;
                  }
                }
              }
            }
          });
          $("#limo_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limo_input_form').validate().element("#limo_datepicker");
            }
          });
          $("#limo-mobile-number").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#limo_return_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#limo_input_form').validate().element("#limo_return_timepicker");
            }
          });
          $("#limo_return_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#limo_input_form').validate().element("#limo_return_datepicker");
            }
          });
          if (user) {
            if (user.first_name != null || user.last_name != null) {
              $scope.requestData.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.requestData.email = user.email;
            }
            if (user.phone != null) {
              $("#limo-mobile-number").intlTelInput("setNumber", user.phone);
            }
            if (user.company != null) {
              $scope.requestData.company = user.company;
            }
            accessosloAPI.users.getPassengers(user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
            });
          }
          // payment modal setting
          $("#country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#birth");
            }
          });
          $("#passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#passport_expiry");
            }
          });
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMeetgreetPayment', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/directives/meet-greet/view.html',
      scope: {},
      controller: function ($scope, $http, $timeout) {
        //define $scope variables
        $scope.requestData = {}; $scope.newPassenger = {}; $scope.estimate = {}; $scope.current_rate = {}; $scope.passengers = []; $scope.creditpayment = {}; $scope.selected_passenger = []; $scope.charter_data = {};
        $scope.is_arrival = false; $scope.is_departure = false; $scope.is_step1 = true; $scope.is_step2 = false; $scope.is_step3 = false; $scope.is_wire = false; $scope.agree = false; $scope.is_show_alert = true; $scope.return_setting = false;
        $scope.transfermail = ""; $scope.resultAddingMessage = ""; $scope.total_cost = 0; $scope.meetCost = '';
        $scope.selectorsettings = {
          checkBoxes: true,
          dynamicTitle: false,
          showUncheckAll: true,
          showCheckAll: true
        };
        //next button in step1
        $scope.step1 = function () { $scope.is_step1 = false; $scope.is_step2 = true; };
        // back button in step2
        $scope.step2_back = function () { $scope.is_step1 = true; $scope.is_step2 = false; };
        // next button in step2
        $scope.step2 = function () {
          if ($scope.selected_passenger.length != 0) {
            $scope.is_step2 = false; $scope.is_step3 = true;
          } else {
            $scope.select_passenger_style = 'red';
          }
        };
        // add passenger in step2
        $scope.AddPassenger = function () {
          if ($("#input_form").valid()) {
            $scope.is_show_alert = true;
            $scope.newPassenger.user_id = user.id;
            var nationality = $("#country").countrySelect("getSelectedCountryData");
            $scope.newPassenger.nationality = nationality.name;
            accessosloAPI.users.add_passenger($scope.newPassenger, function (response) {
              if (response.type == "success") {
                var passenger = {
                  id: response.data.id,
                  label: response.data.first_name + " " + response.data.last_name
                };
                $scope.passengers.push(passenger);
                $scope.newPassenger = {};
                $scope.resultAddingMessage = "The passenger is added.";
                $scope.resultType = { "color": "green", "text-align": "center" };
                $scope.$apply();
              } else {
                $scope.resultAddingMessage = "The passenger was already existed.";
                $scope.resultType = { "color": "red", "text-align": "center" };
                $scope.$apply();
              }
              $timeout(function () {
                $scope.is_show_alert = false;
                $scope.resultAddingMessage = "";
              }, 5000);
            });
          }
        };
        //terms & policy checkbox validation
        $scope.getagree = function () {
          if ($scope.agree) {
            $scope.agreeTermStyle = '#e0e0e0';
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
        // show email box in wire payment mode
        $scope.getPaymentMethod = function (val) {
          if (val == "wire") {
            $scope.is_wire = true;
          } else {
            $scope.is_wire = false;
          }
        };
        // confirm button in step3
        $scope.confirm = function () {
          if ($scope.agree) {
            if ($scope.is_wire) {
              if ($("#payment_form").valid()) {
                var data = {
                  type: "meet",
                  charter_id: $scope.charter_data.id,
                  email: $scope.transfermail,
                  passengers: $scope.selected_passenger,
                  user_email: user.email
                };
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.send_invoice_request(data, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Confirm");
                  $("#meetgreet-paymentProcess").modal('hide');
                });
              }
            } else {
              var meet_data = {
                item: "Meet & Greet",
                item_number: $scope.charter_data.id,
                type: 'meet',
                amount: $scope.charter_data.total_cost,
                redirect_origin: "front"
              };
              $scope.token = config.token;
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              $http({
                method: "POST",
                url: "/services/paypal",
                data: meet_data,
                headers: {
                  "X-CSRF-TOKEN": config.token,
                  'content-type': 'application/json',
                  'Accept': 'application/json',
                  'Access-Control-Allow-Credentials': true,
                  'Access-Control-Allow-Origin': true
                }
              }).then(function (result) {
                window.location.href = result.data;
              }, function (error) {
                alert("something went wrong. contact to support Team.");
              });
            }
          } else {
            $scope.agreeTermStyle = 'red';
          }
        };
  
        var getCurrency = function () {
          var endpoint = 'live';
          var access_key = '8c479a455a6d8a2f5cccc8ce01819269';
          $.ajax({
            url: 'https://apilayer.net/api/' + endpoint + '?access_key=' + access_key,
            dataType: 'jsonp',
            success: function (json) {
              $scope.current_rate = {
                USDEUR: json.quotes.USDEUR,
                USDNOK: json.quotes.USDNOK
              };
            }
          });
        };
        $scope.getTravelers = function () {
          if (parseInt($scope.requestData.travelers) > 5) {
            var diff = parseInt($scope.requestData.travelers) - 5;
            var cost =  213 * diff + 1680;
            $scope.totalCost = "kr " + cost + ",-";
            $scope.meetCost = "kr " + cost + ",- incl. vat";
            $scope.requestData.total_cost = Math.round(cost * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK);
          } else {
            $scope.totalCost = "kr " + 1680 + ",-";
            $scope.meetCost = "kr " + 1680 + ",- incl. vat";
            $scope.requestData.total_cost = Math.round(1680 * $scope.current_rate.USDEUR / $scope.current_rate.USDNOK);
          }
        };
        $("#is_arrival").click( function(){
            if( $(this).is(':checked') ) {
              $scope.is_arrival = true;
              $(".inbound-box > .form-group > input").prop('disabled', false);
            } else {
              $scope.is_arrival = false;
              $(".inbound-box > .form-group > input").prop('disabled', true);
            }
        });
        $("#is_departure").click( function(){
          if( $(this).is(':checked') ) {
            $scope.is_departure = true;
            $(".outbound-box > .form-group > input").prop('disabled', false);
          } else {
            $scope.is_departure = false;
            $(".outbound-box > .form-group > input").prop('disabled', true);
          }
        });
        $scope.close_success = function() {
            $("#BookSuccessMessage_new").modal('hide');
            location.reload();
        };
        $scope.NewRequest = function () {
            location.reload();
        };        
        $scope.BookRequest = function () {
          $scope.requestData.phone = $("#meet_phone").intlTelInput("getNumber");
          $scope.requestData.is_added = 0;
          $scope.requestData.is_arrival = $scope.is_arrival;
          $scope.requestData.is_departure = $scope.is_departure;
          if ($('#meet_flight_form').valid()) {
            if ($('#meet_phone').intlTelInput('isValidNumber')) {
              if ($scope.is_arrival == false && $scope.is_departure == false) {
                alert("please fill inbound/outbound form.");
              } else {
                $(".confirm").addClass("submit");
                $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
                accessosloAPI.services.meet_booking($scope.requestData, function (response) {
                  $(".confirm").removeClass("submit");
                  $(".confirm").html("Book & Pay");
                  if (response.booking.travelers > 17) {
                    if (user != null) {
                      $("#BookSuccessMessage_new").modal('show');    
                    } else {
                      $("#BookSuccessMessage").modal('show');
                    }
                  } else {
                    $scope.charter_data = response.booking;
                    $scope.$apply();
                    if (user) {
                      $("#meetgreet-paymentProcess").modal('show');
                    } else {
                      $("#LoginModal").modal('show');
                    }
                  }                
                });
              }
            } else {
              alert("Invalid phone number!");
            }
          }
        };
        $scope.Login = function () {
          $(".login-modal").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
          var userData = { email: $("#email").val(), password: $("#password").val() };
          accessosloAPI.users.login(userData, function (response) {
            $("#LoginModal").modal('hide');
            user = response.user;
            accessosloAPI.users.getPassengers(response.user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
              $("#meetgreet-paymentProcess").modal('show');
            });
          });
        };
        var init = function () {
          //set form validation
          getCurrency();
          $('#meet_flight_form').validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
                $(element).parent().addClass("error");
                $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parent().removeClass("error");
                $(element).parent().addClass("success");
            }
          });
          $("#meet_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          $("#in_meet_datepicker").datepicker({
            showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
                $('#meet_flight_form').validate().element("#in_meet_datepicker");
            }
          });
          $("#out_meet_datepicker").datepicker({
              showOtherMonths: true,selectOtherMonths: true,minDate:new Date(), format: 'mm/dd/yyyy',
              onClose: function () {
                  $('#meet_flight_form').validate().element("#out_meet_datepicker");
              }
          });
          $("#in_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#in_timepicker");
              }
          });
          $("#out_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#out_timepicker");
              }
          });
          $("#in_departure_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#in_departure_timepicker");
              }
          });
          $("#out_departure_timepicker").wickedpicker({
              twentyFour: true,
              onClose: function () {
                  $('#meet_flight_form').validate().element("#out_departure_timepicker");
              }
          });
          if (user) {
            if (user.first_name != null || user.last_name != null) {
              $scope.requestData.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.requestData.email = user.email;
            }
            if (user.phone != null) {
              $("#meet_phone").intlTelInput("setNumber", user.phone);
            }
            if (user.company != null) {
              $scope.requestData.company = user.company;
            }
            accessosloAPI.users.getPassengers(user, function (response) {
              response.forEach(function(sel) {
                var passenger = {
                  id: sel.id,
                  label: sel.first_name + " " + sel.last_name
                };
                $scope.passengers.push(passenger);
                $scope.$apply();
              });
            });
          }
          // payment modal setting
          $("#country").countrySelect({
            preferredCountries: ['no', 'se', 'gb', 'de', 'us']
          });
          $("#birth").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#birth");
            }
          });
          $("#passport_expiry").datepicker({
            showOtherMonths: true,
            selectOtherMonths: true,
            format: 'mm/dd/yyyy',
            onClose: function () {
              $('#input_form').validate().element("#passport_expiry");
            }
          });
          $("#input_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#payment_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMobileMemberExecutive', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/mobile-executive-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.executiveflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.passengers = []; $scope.passenger = {};
        $scope.OnContinue = function () {
          if ($("#mobile_executive1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.onFlightTypeChange = function () {
          if ($scope.executiveflight.flight_type == 'Round Way') {
            $(".return-datetime").attr('style', 'display: block');
            $("#mobile_return_exec_datepicker").prop('required', true);
            $("#mobile_return_exec_timepicker").prop('required', true);
          } else {
            $(".return-datetime").attr('style', 'display: none');
            $("#mobile_return_exec_datepicker").prop('required', false);
            $("#mobile_return_exec_timepicker").prop('required', false);
          }
        };
        $scope.OnBook = function () {
          if ($("#mobile_executive2_form").valid()) {
            if ($("#mobile_executive_phone").intlTelInput("isValidNumber")) {
              $scope.executiveflight.phone = $("#mobile_executive_phone").intlTelInput("getNumber");
              $scope.executiveflight.booking_type = "executive";
              $scope.executiveflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.create($scope.executiveflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("GET FREE QUOTE");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          } else {
            alert("Invalid phone number!");
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#mobile_executive_departure').typeahead('destroy');
              $('#mobile_executive_destination').typeahead('destroy');
              $("#mobile_executive_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#mobile_executive_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#mobile_executive_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#mobile_executive1_form").validate().element("#mobile_executive_datepicker");
            }
          });
          $("#mobile_executive_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#mobile_executive1_form').validate().element("#mobile_executive_timepicker");
            }
          });
          $("#mobile_return_exec_timepicker").wickedpicker({
            twentyFour: true,
            onClose: function () {
              $('#mobile_executive2_form').validate().element("#mobile_return_exec_timepicker");
            }
          });
          $("#mobile_return_exec_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $('#mobile_executive2_form').validate().element("#mobile_return_exec_datepicker");
            }
          });
          $("#mobile_executive_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.executiveflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.executiveflight.email = user.email;
            }
            if (user.phone != null) {
              $("#mobile_executive_phone").intlTelInput("setNumber", user.phone);
            }
          }
          accessosloAPI.users.getPassengers(user, function (response) {
            $scope.passengers = response;
            $scope.$apply();
          });
          $("#mobile_executive1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile_executive2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);

  member.directive('accessosloMobileMemberGroup', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/mobile-group-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.groupflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.OnContinue = function () {
          if ($("#mobile_group1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.OnBook = function () {
          if ($("#mobile_group2_form").valid()) {
            if ($("#mobile_group_phone").intlTelInput("isValidNumber")) {
              $scope.groupflight.phone = $("#mobile_group_phone").intlTelInput("getNumber");
              $scope.groupflight.booking_type = "group";
              $scope.groupflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.create($scope.groupflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Send Request");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#mobile_group_departure').typeahead('destroy');
              $('#mobile_group_destination').typeahead('destroy');
              $("#mobile_group_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#mobile_group_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#mobile_group_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#mobile_group1_form").validate().element("#mobile_group_datepicker");
            }
          });
          $("#mobile_group_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.groupflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.groupflight.email = user.email;
            }
            if (user.phone != null) {
              $("#mobile_group_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#mobile_group1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile_group2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
  
        init();
      }
    };
  }]);

  member.directive('accessosloMobileMemberHelicopter', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/mobile-helicopter-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.helicopterflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.OnContinue = function () {
          if ($("#mobile_helicopter1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.OnBook = function () {
          if ($("#mobile_helicopter2_form").valid()) {
            if ($("#mobile_helicopter_phone").intlTelInput("isValidNumber")) {
              $scope.helicopterflight.phone = $("#mobile_helicopter_phone").intlTelInput("getNumber");
              $scope.helicopterflight.booking_type = "helicopter";
              $scope.helicopterflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.create($scope.helicopterflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("GET FREE QUOTE");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#mobile_helicopter_departure').typeahead('destroy');
              $('#mobile_helicopter_destination').typeahead('destroy');
              $("#mobile_helicopter_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#mobile_helicopter_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#mobile_helicopter_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#mobile_helicopter1_form").validate().element("#mobile_helicopter_datepicker");
            }
          });
          $("#mobile_helicopter_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.helicopterflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.helicopterflight.email = user.email;
            }
            if (user.phone != null) {
              $("#mobile_helicopter_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#mobile_helicopter1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile_helicopter2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
    
  member.directive('accessosloMobileMemberCargo', ["accessosloAPI", function (accessosloAPI) {
    return {
      templateUrl: '/ng/modules/member/make_request/mobile-cargo-charter.html',
      scope: {},
      controller: function ($scope) {
        $scope.cargoflight = {}; $scope.step1 = true; $scope.step2 = false;
        $scope.OnContinue = function () {
          if ($("#mobile_cargo1_form").valid()) {
            $scope.step1 = false; $scope.step2 = true;
          }
        };
        $scope.OnBook = function () {
          if ($("#mobile_cargo2_form").valid()) {
            if ($("#mobile_cargo_phone").intlTelInput("isValidNumber")) {
              $scope.cargoflight.phone = $("#mobile_cargo_phone").intlTelInput("getNumber");
              $scope.cargoflight.status = "awaiting";
              $(".confirm").addClass("submit");
              $(".confirm").html("<div class='ld ld-ring ld-spin-fast waiting-animation'></div>");
              accessosloAPI.charters.cargo_booking($scope.cargoflight, function (response) {
                $(".confirm").removeClass("submit");
                $(".confirm").html("Get Free Quote");
                $(".CustomBookSuccessMessage").modal('show');
              });
            }
          }
        };
        $scope.closeSuccess = function () {
          $(".CustomBookSuccessMessage").modal('hide');
          location.reload();
        };
        $scope.NewRequest = function () {
          location.reload();
        };
        var getAirportInformation = function () {
          var airports = [];
          var api_key = 'eb07b45ce0630bf683cd176a0174bec5';
          $.ajax({
            url: 'https://airport.api.aero/airport/?user_key=' + api_key,
            type: 'GET',
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function (e) {
              e.airports.forEach(function(sel) {
                if (sel.name != null) {
                  airports.push(sel.name + "#" + sel.code + "#" + sel.country + "#" + sel.city);
                }
              });
              $('#mobile_cargo_departure').typeahead('destroy');
              $('#mobile_cargo_destination').typeahead('destroy');
              $("#mobile_cargo_departure").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
              $("#mobile_cargo_destination").typeahead({
                source: airports,
                highlighter: function (item) {
                  var parts = item.split("#");
                  var html = "<div><div class='typehead-inner'>";
                  html += "<div class='item-img'>" + "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24' class='bpk-autosuggest__suggestion-icon-2OnBo bpk-icon--rtl-support-1DqTP' style='width: 1.5rem; height: 1.5rem;'><path d='M17.8 20.1l.6-.6c.2-.2.3-.5.2-.8l-2.2-9.3 4.1-4.2c.5-.5.5-1.3 0-1.9-.5-.5-1.4-.5-1.9 0l-4.2 4.1-9.1-2c-.3-.1-.6 0-.8.2l-.6.6c-.4.4-.3 1.1.2 1.4l7.2 3.2-3.7 3.7-2.3-.8c-.3-.1-.6 0-.8.2L3 15.2l4.2 1.6L8.8 21l1.3-1.5c.2-.2.3-.6.2-.8l-.8-2.3 3.7-3.7 3.2 7.2c.3.5 1 .6 1.4.2z'></path></svg></div>";
                  html += "<div class='item-body'>";
                  html += "<p class='item-heading'>" + "<span class='item-airport'>" + parts[0] + "<span class='item-code'> (" + parts[1] + ")</p>";
                  html += "<p class='item-sub'>" + parts[2] + ", " + parts[3] + "</p></div></div></div>";
  
                  var query = this.query;
                  var reEscQuery = query.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                  var reQuery = new RegExp('(' + reEscQuery + ')', "gi");
                  var jElem = $(html);
                  var textNodes = $(jElem.find('*')).add(jElem).contents().filter(function () {
                    return this.nodeType === 3;
                  });
                  textNodes.replaceWith(function () {
                    return $(this).text().replace(reQuery, '<strong>$1</strong>');
                  });
                  return jElem.html();
                },
                updater: function (selectedName) {
                  var name = selectedName.split('#')[0] + " (" + selectedName.split('#')[1] + ")";
                  return name;
                }
              });
            }
          });
        };
        var init = function () {
          getAirportInformation();
          $(".dashboard_btn").attr('style', 'display: inline-block; float:right; margin-right:10px; margin-top:8px;');
          $("#mobile_cargo_datepicker").datepicker({
            showOtherMonths: true, selectOtherMonths: true, minDate: new Date(), format: 'mm/dd/yyyy',
            onClose: function () {
              $("#mobile_cargo1_form").validate().element("#mobile_cargo_datepicker");
            }
          });
          $("#mobile_cargo_phone").intlTelInput({
            allowDropdown: true,
            autoHideDialCode: false,
            autoPlaceholder: "polite",
            dropdownContainer: "body",
            preferredCountries: ['no', 'se', 'gb', 'de', 'us'],
            utilsScript: "/js/vendor/utils.js"
          });
          if (user != null) {
            if (user.first_name != null || user.last_name != null) {
              $scope.cargoflight.contact_person = user.first_name + " " + user.last_name;
            }
            if (user.email != null) {
              $scope.cargoflight.email = user.email;
            }
            if (user.phone != null) {
              $("#mobile_cargo_phone").intlTelInput("setNumber", user.phone);
            }
          }
          $("#mobile_cargo1_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
          $("#mobile_cargo2_form").validate({
            errorPlacement: function () { },
            errorClass: "label",
            highlight: function (element, errorClass, validClass) {
              $(element).parent().addClass("error");
              $(element).parent().removeClass("success");
            },
            unhighlight: function (element, errorClass, validClass) {
              $(element).parent().removeClass("error");
              $(element).parent().addClass("success");
            }
          });
        };
        init();
      }
    };
  }]);
}());